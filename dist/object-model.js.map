{"version":3,"file":"object-model.js","sources":["../src/helpers.js","../src/basic-model.js","../src/object-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["import { BasicModel } from \"./basic-model\"\r\n\r\nconst defineProperty = Object.defineProperty\r\n\r\nexport function is(Constructor, obj){\r\n\treturn obj instanceof Constructor\r\n}\r\n\r\nexport function isFunction(o){\r\n\treturn typeof o === \"function\"\r\n}\r\n\r\nexport function isObject(o){\r\n    return typeof o === \"object\"\r\n}\r\n\r\nexport function isPlainObject(o){\r\n\treturn o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype\r\n}\r\n\r\nexport function bettertypeof(obj){\r\n\treturn ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1]\r\n}\r\n\r\nexport function merge(target, src={}, deep, includingProto) {\r\n\tfor(let key in src){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tconst o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function define(obj, key, value, enumerable=false) {\r\n\tdefineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\r\n}\r\n\r\nexport function setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor.prototype)\r\n\tdefine(model, \"constructor\", constructor)\r\n}\r\n\r\nexport function setConstructorProto(constructor, proto){\r\n\tconstructor.prototype = Object.create(proto)\r\n\tconstructor.prototype.constructor = constructor\r\n}\r\n\r\nexport function toString(obj, stack = []){\r\n\tif(stack.length > 15 || stack.includes(obj)) return '...'\r\n\tif(obj == null) return String(obj)\r\n\tif(typeof obj == \"string\") return `\"${obj}\"`\r\n\tif(is(BasicModel, obj)) return obj.toString(stack)\r\n\tstack = [obj].concat(stack)\r\n\tif(isFunction(obj)) return obj.name || obj.toString(stack)\r\n\tif(is(Array, obj)) return `[${obj.map(item => toString(item, stack)).join(', ')}]`\r\n\tif(obj.toString !== Object.prototype.toString) return obj.toString()\r\n\tif(obj && isObject(obj)) {\r\n\t\tconst props = Object.keys(obj),\r\n\t\t\t  indent = '\\t'.repeat(stack.length)\r\n\t\treturn `{${props.map(\r\n\t\t\tkey => `\\n${indent+key}: ${toString(obj[key], stack)}`\r\n\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t}\r\n\treturn String(obj)\r\n}","import {\r\n\tbettertypeof,\r\n\tdefine,\r\n\tis, isFunction, isPlainObject,\r\n\tsetConstructor,\r\n\tsetConstructorProto,\r\n\ttoString\r\n} from \"./helpers\"\r\n\r\nexport function BasicModel(def){\r\n\tconst model = function(obj = model.default) {\r\n\t\tmodel.validate(obj)\r\n\t\treturn obj\r\n\t}\r\n\r\n\tinitModel(model, arguments, BasicModel)\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(BasicModel, Function.prototype)\r\n\r\nObject.assign(BasicModel.prototype, {\r\n\ttoString(stack){\r\n\t\treturn parseDefinition(this.definition).map(d => toString(d, stack)).join(\" or \")\r\n\t},\r\n\r\n\tassertions: [],\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis._validate(obj, null, this.errorStack, [])\r\n\t\tthis.unstackErrors(errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector\r\n\t\tthis.errorCollector = () => { failed = true }\r\n\t\tthis(obj)\r\n\t\tthis.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\textend(){\r\n\t\tconst args = [...arguments]\r\n\t\tconst def = args\r\n\t\t\t.reduce((def, ext) => def.concat(parseDefinition(ext)), parseDefinition(this.definition))\r\n\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\r\n\t\tlet assertions = [...this.assertions]\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(BasicModel, arg)) assertions = assertions.concat(arg.assertions)\r\n\t\t})\r\n\r\n\t\tconst submodel = new this.constructor(def)\r\n\t\tsetConstructorProto(submodel, this.prototype)\r\n\t\tsubmodel.assertions = assertions\r\n\t\tsubmodel.errorCollector = this.errorCollector\r\n\t\treturn submodel\r\n\t},\r\n\r\n\tassert(assertion, description = toString(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\t_validate(obj, path, errorStack, callStack){\r\n\t\tcheckDefinition(obj, this.definition, path, errorStack, callStack)\r\n\t\tcheckAssertions(obj, this, path, errorStack)\r\n\t},\r\n\r\n\t// throw all errors collected\r\n\tunstackErrors(errorCollector){\r\n\t\tif (!this.errorStack.length) return\r\n\t\tif (!errorCollector) errorCollector = this.errorCollector\r\n\t\tconst errors = this.errorStack.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tconst def = is(Array, err.expected) ? err.expected : [err.expected]\r\n\t\t\t\terr.message = (\"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => toString(d)).join(\" or \")\r\n\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + toString(err.received))\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t})\r\n\t\tthis.errorStack = []\r\n\t\terrorCollector.call(this, errors)\r\n\t}\r\n\r\n})\r\n\r\nBasicModel.prototype.conventionForConstant = key => key.toUpperCase() === key\r\nBasicModel.prototype.conventionForPrivate = key => key[0] === \"_\"\r\n\r\nexport function initModel(model, args, constructor){\r\n\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\tsetConstructor(model, constructor)\r\n\tmodel.definition = args[0]\r\n\tmodel.assertions = model.assertions.slice()\r\n\tdefine(model, \"errorStack\", [])\r\n}\r\n\r\nexport function parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!is(Array, def)) return [def]\r\n\t\tif(def.length === 1) return [...def, undefined, null]\r\n\t} else {\r\n\t\tfor(let key of Object.keys(def))\r\n\t\t\tdef[key] = parseDefinition(def[key])\r\n\t}\r\n\treturn def\r\n}\r\n\r\nexport function checkDefinition(obj, def, path, errorStack, callStack, shouldAutoCast=false){\r\n\tconst indexFound = callStack.indexOf(def)\r\n\tif(indexFound !== -1 && callStack.indexOf(def, indexFound+1) !== -1)\r\n\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\tif(shouldAutoCast)\r\n\t\tobj = autocast(obj, def)\r\n\r\n\r\n\tif(is(BasicModel, def)){\r\n\t\tdef._validate(obj, path, errorStack, callStack.concat(def))\r\n\t}\r\n\telse if(isPlainObject(def)){\r\n\t\tObject.keys(def).forEach(key => {\r\n\t\t\tconst val = obj != null ? obj[key] : undefined\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, errorStack, callStack)\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tconst pdef = parseDefinition(def)\r\n\t\tif(pdef.some(part => checkDefinitionPart(obj, part, path, callStack)))\r\n\t\t\treturn obj\r\n\r\n\t\terrorStack.push({\r\n\t\t\texpected: def,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t})\r\n\t}\r\n\r\n\treturn obj\r\n}\r\n\r\nexport function checkDefinitionPart(obj, def, path, callStack){\r\n\tif(obj == null) return obj === def\r\n\tif(isPlainObject(def) || is(BasicModel, def)){ // object or model as part of union type\r\n\t\tconst errorStack = []\r\n\t\tcheckDefinition(obj, def, path, errorStack, callStack)\r\n\t\treturn !errorStack.length\r\n\t}\r\n\tif(is(RegExp, def)) return def.test(obj)\r\n\tif(def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj.constructor === def\r\n}\r\n\r\nexport function checkAssertions(obj, model, path, errorStack = model.errorStack){\r\n\tfor(let assertion of model.assertions){\r\n\t\tlet result\r\n\t\ttry {\r\n\t\t\tresult = assertion.call(model, obj)\r\n\t\t} catch(err){\r\n\t\t\tresult = err\r\n\t\t}\r\n\t\tif(result !== true){\r\n\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t`assertion \"${assertion.description}\" returned ${toString(assertionResult)} for value ${toString(value)}`\r\n\t\t\terrorStack.push({\r\n\t\t\t\tmessage: onFail.call(model, result, obj),\r\n\t\t\t\texpected: assertion,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function autocast(obj, defNode=[]) {\r\n\tif(!obj || isPlainObject(defNode) || is(BasicModel, obj.constructor))\r\n\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\tconst def = parseDefinition(defNode),\r\n\t      suitableModels = []\r\n\r\n\tfor (let part of def) {\r\n\t\tif(is(BasicModel, part) && part.test(obj))\r\n\t\t\tsuitableModels.push(part)\r\n\t}\r\n\r\n\tif (suitableModels.length === 1)\r\n\t\treturn suitableModels[0](obj) // automatically cast to suitable model when explicit\r\n\r\n\tif (suitableModels.length > 1)\r\n\t\tconsole.warn(`Ambiguous model for value ${toString(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\treturn obj\r\n}\r\n\r\nexport default BasicModel","import { BasicModel, initModel, autocast, checkDefinition, checkAssertions } from \"./basic-model\"\r\nimport { is, isFunction, isObject, isPlainObject, merge, setConstructorProto, toString } from \"./helpers\"\r\n\r\nfunction ObjectModel(def){\r\n\r\n\tconst model = function(obj = model.default) {\r\n\t\tif(is(model, obj)) return obj\r\n\t\tif(!is(model, this)) return new model(obj)\r\n\t\tmerge(this, obj, true)\r\n\t\tconst proxy = getProxy(model, this, model.definition)\r\n\t\tmodel.validate(proxy)\r\n\t\treturn proxy\r\n\t}\r\n\r\n\tsetConstructorProto(model, Object.prototype)\r\n\tinitModel(model, arguments, ObjectModel)\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(ObjectModel, BasicModel.prototype)\r\n\r\nObject.assign(ObjectModel.prototype, {\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn toString(this.definition, stack)\r\n\t},\r\n\r\n\textend(){\r\n\t\tconst def = {}\r\n\t\tconst proto = {}\r\n\t\tconst args = [...arguments]\r\n\r\n\t\tObject.assign(def, this.definition)\r\n\t\tmerge(proto, this.prototype, false, true)\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(BasicModel, arg)) merge(def, arg.definition, true)\r\n\t\t\tif(isFunction(arg)) merge(proto, arg.prototype, true, true)\r\n\t\t\tif(isObject(arg)) merge(def, arg, true, true)\r\n\t\t})\r\n\r\n\t\tlet assertions = [...this.assertions]\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(BasicModel, arg)) assertions = assertions.concat(arg.assertions)\r\n\t\t})\r\n\r\n\t\tconst submodel = new this.constructor(def)\r\n\t\tsetConstructorProto(submodel, this.prototype)\r\n\t\tObject.assign(submodel.prototype, proto)\r\n\t\tsubmodel.assertions = assertions\r\n\t\tsubmodel.errorCollector = this.errorCollector\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t_validate(obj, path, errorStack, callStack){\r\n\t\tif(!isObject(obj)){\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tcheckDefinition(obj, this.definition, path, errorStack, callStack)\r\n\t\t}\r\n\t\tcheckAssertions(obj, this, path, errorStack)\r\n\t}\r\n})\r\n\r\nfunction getProxy(model, obj, defNode, path) {\r\n\tif(!isPlainObject(defNode)) {\r\n\t\treturn autocast(obj, defNode)\r\n\t}\r\n\r\n\treturn new Proxy(obj || {}, {\r\n\t\tget(o, key) {\r\n\t\t\tconst newPath = (path ? path + '.' + key : key)\r\n\t\t\treturn getProxy(model, o[key], defNode[key], newPath)\r\n\t\t},\r\n\t\tset(o, key, val) {\r\n\t\t\tconst newPath = (path ? path + '.' + key : key),\r\n\t\t\t\t  isConstant = model.conventionForConstant(key),\r\n\t\t\t\t  initialValue = o[key]\r\n\t\t\t\r\n\t\t\tif(isConstant && initialValue !== undefined){\r\n\t\t\t\tmodel.errorStack.push({\r\n\t\t\t\t\tmessage: `cannot redefine constant ${key}`\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif(defNode.hasOwnProperty(key)){\r\n\t\t\t\tconst newProxy = getProxy(model, val, defNode[key], newPath)\r\n\t\t\t\tcheckDefinition(newProxy, defNode[key], newPath, model.errorStack, [])\r\n\t\t\t\to[key] = newProxy\r\n\t\t\t\tcheckAssertions(obj, model, newPath)\r\n\t\t\t} else {\r\n\t\t\t\tmodel.errorStack.push({\r\n\t\t\t\t\tmessage: `cannot find property ${newPath} in the model definition`\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(model.errorStack.length){\r\n\t\t\t\to[key] = initialValue\r\n\t\t\t\tmodel.unstackErrors()\r\n\t\t\t}\r\n\r\n\t\t\treturn true\r\n\t\t},\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\t\townKeys(o){\r\n\t\t\treturn Reflect.ownKeys(o).filter(key => !model.conventionForPrivate(key))\r\n\t\t},\r\n\t\tgetPrototypeOf(){\r\n\t\t\treturn model.prototype\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport default ObjectModel","import { BasicModel, initModel, autocast, checkDefinition, checkAssertions } from \"./basic-model\"\r\nimport { is, setConstructorProto, toString } from \"./helpers\"\r\n\r\nconst ARRAY_MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nfunction ArrayModel(def){\r\n\r\n\tconst model = function(array = model.default) {\r\n\t\tmodel.validate(array)\r\n\t\treturn new Proxy(array, {\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (key === \"constructor\")\r\n\t\t\t\t\treturn model\r\n\t\t\t\telse if (ARRAY_MUTATOR_METHODS.includes(key))\r\n\t\t\t\t\treturn proxifyArrayMethod(arr, key, model)\r\n\t\t\t\treturn arr[key]\r\n\t\t\t},\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\tsetArrayKey(arr, key, val, model)\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tgetPrototypeOf(){\r\n\t\t\t\treturn model.prototype\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tsetConstructorProto(model, Array.prototype)\r\n\tinitModel(model, arguments, ArrayModel)\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(ArrayModel, BasicModel.prototype)\r\nObject.assign(ArrayModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(arr, path, errorStack, callStack){\r\n\t\tif(is(Array, arr))\r\n\t\t\tarr.forEach((a,i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errorStack, callStack, true)\r\n\t\t\t})\r\n\t\telse errorStack.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: arr,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(arr, this, path, errorStack)\r\n\t}\r\n})\r\n\r\nfunction proxifyArrayMethod(array, method, model){\r\n\treturn function() {\r\n\t\tconst testArray = array.slice()\r\n\t\tArray.prototype[method].apply(testArray, arguments)\r\n\t\tmodel.validate(testArray)\r\n\t\tconst returnValue = Array.prototype[method].apply(array, arguments)\r\n\t\tarray.forEach((a,i)=> array[i] = autocast(a, model.definition))\r\n\t\treturn returnValue\r\n\t}\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tlet path = `Array[${key}]`;\r\n\tif(parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errorStack, [], true)\r\n\r\n\tconst testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tmodel.unstackErrors()\r\n\tarray[key] = value\r\n}\r\n\r\nexport default ArrayModel","import { BasicModel, initModel, checkDefinition, checkAssertions } from \"./basic-model\"\r\nimport { isFunction, setConstructor, setConstructorProto, toString } from \"./helpers\"\r\n\r\nfunction FunctionModel(){\r\n\r\n\tconst model = function(fn = model.default) {\r\n\t\tconst def = model.definition\r\n\t\tconst proxyFn = function () {\r\n\t\t\tconst args = []\r\n\t\t\tObject.assign(args, def.defaults)\r\n\t\t\tObject.assign(args, [...arguments])\r\n\t\t\tif (args.length > def.arguments.length) {\r\n\t\t\t\tmodel.errorStack.push({\r\n\t\t\t\t\texpected: toString(fn) + \" to be called with \" + def.arguments.length + \" arguments\",\r\n\t\t\t\t\treceived: args.length\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errorStack, [], true)\r\n\t\t\t})\r\n\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\tlet returnValue\r\n\t\t\tif(!model.errorStack.length){\r\n\t\t\t\treturnValue = fn.apply(this, args)\r\n\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\treturnValue = checkDefinition(returnValue, def.return, \"return value\", model.errorStack, [], true)\r\n\t\t\t}\r\n\t\t\tmodel.unstackErrors()\r\n\t\t\treturn returnValue\r\n\t\t}\r\n\t\tsetConstructor(proxyFn, model)\r\n\t\treturn proxyFn\r\n\t}\r\n\r\n\tsetConstructorProto(model, Function.prototype)\r\n\r\n\tconst def = { arguments: [...arguments] }\r\n\tinitModel(model, [ def ], FunctionModel)\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(FunctionModel, BasicModel.prototype)\r\n\r\nObject.assign(FunctionModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\tlet out = 'Function(' + this.definition.arguments.map(argDef => toString(argDef, stack)).join(\",\") +')'\r\n\t\tif(\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + toString(this.definition.return)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaults(){\r\n\t\tthis.definition.defaults = [...arguments]\r\n\t\treturn this\r\n\t},\r\n\r\n\t_validate(f, path, errorStack){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: \"Function\",\r\n\t\t\t\treceived: f,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n})\r\n\r\nexport default FunctionModel","import { BasicModel, initModel, checkDefinition, checkAssertions } from \"./basic-model\"\r\nimport { setConstructor, setConstructorProto, toString } from \"./helpers\"\r\n\r\nconst MAP_MUTATOR_METHODS = [\"set\", \"delete\", \"clear\"]\r\n\r\nfunction MapModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst map = new Map(iterable)\r\n\t\tmodel.validate(map)\r\n\r\n\t\tfor(let method of MAP_MUTATOR_METHODS){\r\n\t\t\tmap[method] = function() {\r\n\t\t\t\tconst testMap = new Map(map)\r\n\t\t\t\tMap.prototype[method].apply(testMap, arguments)\r\n\t\t\t\tmodel.validate(testMap)\r\n\t\t\t\treturn Map.prototype[method].apply(map, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetConstructor(map, model)\r\n\t\treturn map\r\n\t}\r\n\r\n\tsetConstructorProto(model, Map.prototype)\r\n\tinitModel(model, arguments, MapModel)\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(MapModel, BasicModel.prototype)\r\nObject.assign(MapModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Map of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(map, path, errorStack, callStack){\r\n\t\tif(map instanceof Map){\r\n\t\t\tfor(let [key,val] of map){\r\n\t\t\t\tcheckDefinition(val, this.definition, `${path || \"Map\"}[${key}]`, errorStack, callStack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: map,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t\tcheckAssertions(map, this, errorStack)\r\n\t}\r\n})\r\n\r\nexport default MapModel","import { BasicModel, initModel, checkDefinition, checkAssertions } from \"./basic-model\"\r\nimport { setConstructor, setConstructorProto, toString } from \"./helpers\"\r\n\r\nconst SET_MUTATOR_METHODS = [\"add\", \"delete\", \"clear\"]\r\n\r\nfunction SetModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst _set = new Set(iterable)\r\n\t\tmodel.validate(_set)\r\n\r\n\t\tfor(let method of SET_MUTATOR_METHODS){\r\n\t\t\t_set[method] = function() {\r\n\t\t\t\tconst testSet = new Set(_set)\r\n\t\t\t\tSet.prototype[method].apply(testSet, arguments)\r\n\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\treturn Set.prototype[method].apply(_set, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetConstructor(_set, model)\r\n\t\treturn _set\r\n\t}\r\n\r\n\tsetConstructorProto(model, Set.prototype)\r\n\tinitModel(model, arguments, SetModel)\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(SetModel, BasicModel.prototype)\r\nObject.assign(SetModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(_set, path, errorStack, callStack){\r\n\t\tif(_set instanceof Set){\r\n\t\t\tfor(let item of _set.values()){\r\n\t\t\t\tcheckDefinition(item, this.definition, (path || \"Set\"), errorStack, callStack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: _set,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t\tcheckAssertions(_set, this, errorStack)\r\n\t}\r\n})\r\n\r\nexport default SetModel"],"names":[],"mappings":"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"}