{"version":3,"sources":["object-model.js"],"names":[],"mappings":"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","file":"object-model.min.js","sourcesContent":["(function (exports) {\n'use strict';\n\nconst defineProperty = Object.defineProperty;\r\n\r\nfunction is(Constructor, obj){\r\n\treturn obj instanceof Constructor\r\n}\r\n\r\nfunction isFunction(o){\r\n\treturn typeof o === \"function\"\r\n}\r\n\r\nfunction isObject(o){\r\n    return typeof o === \"object\"\r\n}\r\n\r\nfunction isPlainObject(o){\r\n\treturn o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype\r\n}\r\n\r\nfunction bettertypeof(x){\r\n\treturn ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1]\r\n}\r\n\r\nfunction merge(target, src={}, deep, includingProto) {\r\n\tfor(let key in src){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tconst o = {};\r\n\t\t\t\tmerge(o, target[key], deep);\r\n\t\t\t\tmerge(o, src[key], deep);\r\n\t\t\t\ttarget[key] = o;\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction define(obj, key, value, enumerable=false) {\r\n\tdefineProperty(obj, key, { value, enumerable, writable: true, configurable: true });\r\n}\r\n\r\nfunction setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor.prototype);\r\n\tdefine(model, \"constructor\", constructor);\r\n}\r\n\r\nfunction setConstructorProto(constructor, proto){\r\n\tconstructor.prototype = Object.create(proto);\r\n\tconstructor.prototype.constructor = constructor;\r\n}\r\n\r\nfunction toString(obj, stack = []){\r\n\tif(stack.length > 15 || stack.includes(obj)) return '...'\r\n\tif(obj === null || obj === undefined) return String(obj)\r\n\tif(typeof obj === \"string\") return `\"${obj}\"`\r\n\tif(is(Model, obj)) return obj.toString(stack)\r\n\tstack = [obj].concat(stack);\r\n\tif(isFunction(obj)) return obj.name || obj.toString(stack)\r\n\tif(is(Array, obj)) return `[${obj.map(item => toString(item, stack)).join(', ')}]`\r\n\tif(obj.toString !== Object.prototype.toString) return obj.toString()\r\n\tif(obj && isObject(obj)) {\r\n\t\tconst props = Object.keys(obj),\r\n\t\t\t  indent = '\\t'.repeat(stack.length);\r\n\t\treturn `{${props.map(\r\n\t\t\tkey => `\\n${indent+key}: ${toString(obj[key], stack)}`\r\n\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t}\r\n\treturn String(obj)\r\n}\n\nfunction parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!is(Array, def)) return [def]\r\n\t\tif(def.length === 1) return [...def, undefined, null]\r\n\t} else {\r\n\t\tfor(let key of Object.keys(def))\r\n\t\t\tdef[key] = parseDefinition(def[key]);\r\n\t}\r\n\treturn def\r\n}\r\n\r\n\r\nfunction checkDefinition(obj, def, path, errorStack, callStack, shouldCast=false){\r\n\tconst indexFound = callStack.indexOf(def);\r\n\tif(indexFound !== -1 && callStack.indexOf(def, indexFound+1) !== -1)\r\n\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\tif(shouldCast)\r\n\t\tobj = cast(obj, def);\r\n\r\n\r\n\tif(is(Model, def)){\r\n\t\tdef._validate(obj, path, errorStack, callStack.concat(def));\r\n\t}\r\n\telse if(isPlainObject(def)){\r\n\t\tObject.keys(def).forEach(key => {\r\n\t\t\tconst val = obj != null ? obj[key] : undefined;\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, errorStack, callStack);\r\n\t\t});\r\n\t}\r\n\telse {\r\n\t\tconst pdef = parseDefinition(def);\r\n\t\tif(pdef.some(part => checkDefinitionPart(obj, part, path, callStack)))\r\n\t\t\treturn obj\r\n\r\n\t\terrorStack.push({\r\n\t\t\texpected: def,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t});\r\n\t}\r\n\r\n\treturn obj\r\n}\r\n\r\nfunction checkDefinitionPart(obj, def, path, callStack){\r\n\tif(obj == null) return obj === def\r\n\tif(isPlainObject(def) || is(Model, def)){ // object or model as part of union type\r\n\t\tconst errorStack = [];\r\n\t\tcheckDefinition(obj, def, path, errorStack, callStack);\r\n\t\treturn !errorStack.length\r\n\t}\r\n\tif(is(RegExp, def)) return def.test(obj)\r\n\tif(def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj.constructor === def\r\n}\r\n\r\n\r\nfunction checkAssertions(obj, model, path, errorStack = model.errorStack){\r\n\tfor(let assertion of model.assertions){\r\n\t\tlet result;\r\n\t\ttry {\r\n\t\t\tresult = assertion.call(model, obj);\r\n\t\t} catch(err){\r\n\t\t\tresult = err;\r\n\t\t}\r\n\t\tif(result !== true){\r\n\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t`assertion \"${assertion.description}\" returned ${toString(assertionResult)} for value ${toString(value)}`;\r\n\t\t\terrorStack.push({\r\n\t\t\t\tmessage: onFail.call(model, result, obj),\r\n\t\t\t\texpected: assertion,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction cast(obj, defNode=[]) {\r\n\tif(!obj || isPlainObject(defNode) || is(Model, obj.constructor))\r\n\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\tconst def = parseDefinition(defNode),\r\n\t      suitableModels = [];\r\n\r\n\tfor (let part of def) {\r\n\t\tif(is(Model, part) && part.test(obj))\r\n\t\t\tsuitableModels.push(part);\r\n\t}\r\n\r\n\tif (suitableModels.length === 1) {\r\n\t\t// automatically cast to suitable model when explicit\r\n\t\tconst model = suitableModels[0];\r\n\t\treturn is(Model, model) ? model(obj) : new model(obj) // basic models should not be called with new\r\n\t}\r\n\r\n\tif (suitableModels.length > 1)\r\n\t\tconsole.warn(`Ambiguous model for value ${toString(obj)}, could be ${suitableModels.join(\" or \")}`);\r\n\r\n\treturn obj\r\n}\n\nfunction BasicModel(def){\r\n\tconst model = function(val = model.default) {\r\n\t\tmodel.validate(val);\r\n\t\treturn val\r\n\t};\r\n\r\n\tinitModel(model, arguments, BasicModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(BasicModel, Model.prototype);\n\nfunction ObjectModel(def){\r\n\tconst model = function(obj = model.default) {\r\n\t\tif(!is(model, this)) return new model(obj)\r\n\t\tif(is(model, obj)) return obj\r\n\t\tmerge(this, obj, true);\r\n\t\tif(model.hasOwnProperty(\"constructor\")){\r\n\t\t\tmodel.constructor.call(this, obj);\r\n\t\t}\r\n\t\tmodel.validate(this);\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t};\r\n\r\n\tsetConstructorProto(model, Object.prototype);\r\n\tinitModel(model, arguments, ObjectModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(ObjectModel, Model.prototype);\r\n\r\nObject.assign(ObjectModel.prototype, {\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p);\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn toString(this.definition, stack)\r\n\t},\r\n\r\n\textend(){\r\n\t\tconst def = {};\r\n\t\tconst proto = {};\r\n\t\tconst args = [...arguments];\r\n\r\n\t\tObject.assign(def, this.definition);\r\n\t\tmerge(proto, this.prototype, false, true);\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(Model, arg)) merge(def, arg.definition, true);\r\n\t\t\tif(isFunction(arg)) merge(proto, arg.prototype, true, true);\r\n\t\t\tif(isObject(arg)) merge(def, arg, true, true);\r\n\t\t});\r\n\t\tdelete proto.constructor;\r\n\r\n\t\tlet assertions = [...this.assertions];\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(Model, arg)) assertions = assertions.concat(arg.assertions);\r\n\t\t});\r\n\r\n\t\tconst submodel = new this.constructor(def);\r\n\t\tsetConstructorProto(submodel, this.prototype);\r\n\t\tObject.assign(submodel.prototype, proto);\r\n\t\tsubmodel.assertions = assertions;\r\n\t\tsubmodel.errorCollector = this.errorCollector;\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t_validate(obj, path, errorStack, callStack){\r\n\t\tif(!isObject(obj)){\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcheckDefinition(obj, this.definition, path, errorStack, callStack);\r\n\t\t}\r\n\t\tcheckAssertions(obj, this, path, errorStack);\r\n\t}\r\n});\r\n\r\nfunction getProxy(model, obj, def, path) {\r\n\tif(!isPlainObject(def)) {\r\n\t\treturn cast(obj, def)\r\n\t}\r\n\r\n\treturn new Proxy(obj || {}, {\r\n\t\tgetPrototypeOf(){\r\n\t\t\tif (def === model.definition)\r\n\t\t\t\treturn model.prototype\r\n\r\n\t\t\treturn Object.prototype\r\n\t\t},\r\n\r\n\t\tget(o, key) {\r\n\t\t\tconst newPath = (path ? path + '.' + key : key),\r\n\t\t\t      defPart = def[key];\r\n\r\n\t\t\tif(key in def && model.conventionForPrivate(key)){\r\n\t\t\t\tmodel.errorStack.push({\r\n\t\t\t\t\tmessage: `cannot access to private property ${newPath}`\r\n\t\t\t\t});\r\n\t\t\t\tmodel.unstackErrors();\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif(o[key] && o.hasOwnProperty(key) && !isPlainObject(defPart) && !is(Model, o[key].constructor)){\r\n\t\t\t\to[key] = cast(o[key], defPart); // cast nested models\r\n\t\t\t}\r\n\r\n\t\t\tif (isFunction(o[key]) && o[key].bind) {\r\n\t\t\t\treturn o[key].bind(o); // auto-bind methods to original object, so they can access private props\r\n\t\t\t}\r\n\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, (newPath) => {\r\n\t\t\t\tReflect.set(o, key, getProxy(model, val, def[key], newPath));\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(){\r\n\t\t\treturn Reflect.ownKeys(def).filter(key => !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(o, key){\r\n\t\t\tlet descriptor;\r\n\t\t\tif(!model.conventionForPrivate(key)){\r\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tif(descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction controlMutation(model, def, path, o, key, applyMutation){\r\n\tconst newPath = (path ? path + '.' + key : key),\r\n\t      isPrivate = model.conventionForPrivate(key),\r\n\t      isConstant = model.conventionForConstant(key),\r\n\t      isOwnProperty = o.hasOwnProperty(key),\r\n\t      initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key);\r\n\r\n\tif(key in def && (isPrivate || (isConstant && o[key] !== undefined))){\r\n\t\tmodel.errorStack.push({\r\n\t\t\tmessage: `cannot modify ${isPrivate ? \"private\" : \"constant\"} ${key}`\r\n\t\t});\r\n\t}\r\n\r\n\tif(def.hasOwnProperty(key)){\r\n\t\tapplyMutation(newPath);\r\n\t\tcheckDefinition(o[key], def[key], newPath, model.errorStack, []);\r\n\t\tcheckAssertions(o, model, newPath);\r\n\t} else {\r\n\t\tmodel.errorStack.push({\r\n\t\t\tmessage: `cannot find property ${newPath} in the model definition`\r\n\t\t});\r\n\t}\r\n\r\n\tif(model.errorStack.length){\r\n\t\tif(isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor);\r\n\t\telse delete o[key]; // back to the initial property defined in prototype chain\r\n\r\n\t\tmodel.unstackErrors();\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}\n\nfunction Model(def){\r\n\treturn isPlainObject(def) ? ObjectModel(def) : BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn parseDefinition(this.definition).map(d => toString(d, stack)).join(\" or \")\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val;\r\n\t\treturn this\r\n\t},\r\n\r\n\t_validate(obj, path, errorStack, callStack){\r\n\t\tcheckDefinition(obj, this.definition, path, errorStack, callStack);\r\n\t\tcheckAssertions(obj, this, path, errorStack);\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis._validate(obj, null, this.errorStack, []);\r\n\t\tthis.unstackErrors(errorCollector);\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector;\r\n\t\tthis.errorCollector = () => { failed = true; };\r\n\t\tnew this(obj);\r\n\t\tthis.errorCollector = initialErrorCollector;\r\n\t\treturn !failed\r\n\t},\r\n\r\n\t// throw all errors collected\r\n\tunstackErrors(errorCollector){\r\n\t\tif (!this.errorStack.length) return\r\n\t\tif (!errorCollector) errorCollector = this.errorCollector;\r\n\t\tconst errors = this.errorStack.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tconst def = is(Array, err.expected) ? err.expected : [err.expected];\r\n\t\t\t\terr.message = (\"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => toString(d)).join(\" or \")\r\n\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + toString(err.received));\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t});\r\n\t\tthis.errorStack = [];\r\n\t\terrorCollector.call(this, errors);\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'));\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\"); // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tlet def = this.definition;\r\n\t\tif(newParts.length > 0){\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), Array.isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index); // remove duplicates\r\n\t\t}\r\n\r\n\t\tlet assertions = [...this.assertions];\r\n\t\tnewParts.forEach(part => {\r\n\t\t\tif(is(BasicModel, part)) assertions = assertions.concat(part.assertions);\r\n\t\t});\r\n\r\n\t\tconst submodel = new this.constructor(def);\r\n\t\tsetConstructorProto(submodel, this.prototype);\r\n\t\tsubmodel.assertions = assertions;\r\n\t\tsubmodel.errorCollector = this.errorCollector;\r\n\t\treturn submodel\r\n\t},\r\n\r\n\tassert(assertion, description = toString(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion);\r\n\t\treturn this\r\n\t}\r\n});\r\n\r\n\r\nfunction initModel(model, args, constructor){\r\n\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\tsetConstructor(model, constructor);\r\n\tmodel.definition = args[0];\r\n\tmodel.assertions = model.assertions.slice();\r\n\tdefine(model, \"errorStack\", []);\r\n\tdelete model.name;\r\n}\n\nconst MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"];\r\n\r\nfunction ArrayModel(def){\r\n\r\n\tconst model = function(array = model.default) {\r\n\t\tif(!is(model, this)) return new model(array)\r\n\t\tmodel.validate(array);\r\n\t\treturn new Proxy(array, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (MUTATOR_METHODS.includes(key)) return proxifyMethod(arr, key, model)\r\n\t\t\t\treturn arr[key]\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key){\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n\tsetConstructorProto(model, Array.prototype);\r\n\tinitModel(model, arguments, ArrayModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(ArrayModel, Model.prototype);\r\nObject.assign(ArrayModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(arr, path, errorStack, callStack){\r\n\t\tif(is(Array, arr))\r\n\t\t\tarr.forEach((a,i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errorStack, callStack, true);\r\n\t\t\t});\r\n\t\telse errorStack.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: arr,\r\n\t\t\tpath\r\n\t\t});\r\n\r\n\t\tcheckAssertions(arr, this, path, errorStack);\r\n\t}\r\n});\r\n\r\nfunction proxifyMethod(array, method, model){\r\n\treturn function() {\r\n\t\tconst testArray = array.slice();\r\n\t\tArray.prototype[method].apply(testArray, arguments);\r\n\t\tmodel.validate(testArray);\r\n\t\tconst returnValue = Array.prototype[method].apply(array, arguments);\r\n\t\tarray.forEach((a,i)=> array[i] = cast(a, model.definition));\r\n\t\treturn returnValue\r\n\t}\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tlet path = `Array[${key}]`;\r\n\tif(parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errorStack, [], true);\r\n\r\n\tconst testArray = array.slice();\r\n\ttestArray[key] = value;\r\n\tcheckAssertions(testArray, model, path);\r\n\tconst isSuccess = !model.unstackErrors();\r\n\tif(isSuccess){\r\n\t\tarray[key] = value;\r\n\t}\r\n\treturn isSuccess\r\n}\n\nfunction FunctionModel() {\r\n\r\n\tconst model = function(fn = model.default) {\r\n\t\treturn new Proxy(fn, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tconst def = model.definition;\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errorStack, [], true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\");\r\n\r\n\t\t\t\tlet result;\r\n\t\t\t\tif(!model.errorStack.length){\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args);\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errorStack, [], true);\r\n\t\t\t\t}\r\n\t\t\t\tmodel.unstackErrors();\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tsetConstructorProto(model, Function.prototype);\r\n\r\n\tconst def = { arguments: [...arguments] };\r\n\tinitModel(model, [ def ], FunctionModel);\r\n\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(FunctionModel, Model.prototype);\r\n\r\nObject.assign(FunctionModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\tlet out = 'Function(' + this.definition.arguments.map(argDef => toString(argDef, stack)).join(\",\") +')';\r\n\t\tif(\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + toString(this.definition.return);\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def;\r\n\t\treturn this\r\n\t},\r\n\r\n\t_validate(f, path, errorStack){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: \"Function\",\r\n\t\t\t\treceived: f,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n\r\nFunctionModel.prototype.assert(function(args){\r\n\tif (args.length > this.definition.arguments.length) return args\r\n\treturn true\r\n}, function(args){\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${toString(this)}, got ${args.length}`\r\n});\n\nconst MAP_MUTATOR_METHODS = [\"set\", \"delete\", \"clear\"];\r\n\r\nfunction MapModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst map = new Map(iterable);\r\n\t\tmodel.validate(map);\r\n\r\n\t\tfor(let method of MAP_MUTATOR_METHODS){\r\n\t\t\tmap[method] = function() {\r\n\t\t\t\tconst testMap = new Map(map);\r\n\t\t\t\tMap.prototype[method].apply(testMap, arguments);\r\n\t\t\t\tmodel.validate(testMap);\r\n\t\t\t\treturn Map.prototype[method].apply(map, arguments)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetConstructor(map, model);\r\n\t\treturn map\r\n\t};\r\n\r\n\tsetConstructorProto(model, Map.prototype);\r\n\tinitModel(model, arguments, MapModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(MapModel, Model.prototype);\r\nObject.assign(MapModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Map of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(map, path, errorStack, callStack){\r\n\t\tif(map instanceof Map){\r\n\t\t\tfor(let [key,val] of map){\r\n\t\t\t\tcheckDefinition(val, this.definition, `${path || \"Map\"}[${key}]`, errorStack, callStack);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: map,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t\tcheckAssertions(map, this, errorStack);\r\n\t}\r\n});\n\nconst SET_MUTATOR_METHODS = [\"add\", \"delete\", \"clear\"];\r\n\r\nfunction SetModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst _set = new Set(iterable);\r\n\t\tmodel.validate(_set);\r\n\r\n\t\tfor(let method of SET_MUTATOR_METHODS){\r\n\t\t\t_set[method] = function() {\r\n\t\t\t\tconst testSet = new Set(_set);\r\n\t\t\t\tSet.prototype[method].apply(testSet, arguments);\r\n\t\t\t\tmodel.validate(testSet);\r\n\t\t\t\treturn Set.prototype[method].apply(_set, arguments)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetConstructor(_set, model);\r\n\t\treturn _set\r\n\t};\r\n\r\n\tsetConstructorProto(model, Set.prototype);\r\n\tinitModel(model, arguments, SetModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(SetModel, Model.prototype);\r\nObject.assign(SetModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(_set, path, errorStack, callStack){\r\n\t\tif(_set instanceof Set){\r\n\t\t\tfor(let item of _set.values()){\r\n\t\t\t\tcheckDefinition(item, this.definition, (path || \"Set\"), errorStack, callStack);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: _set,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t\tcheckAssertions(_set, this, errorStack);\r\n\t}\r\n});\n\nconst styles = {\r\n\tlist: `list-style-type: none; padding: 0; margin: 0;`,\r\n\tlistItem: `padding: 0 0 0 1em;`,\r\n\tmodel: `color: #43a047; font-style: italic`,\r\n\tfunction: `color: #4271ae`,\r\n\tstring: `color: #C41A16`,\r\n\tnumber: `color: #1C00CF`,\r\n\tboolean: `color: #AA0D91`,\r\n\tproperty: `color: #881391`,\r\n\tprivate: `color: #B871BD`,\r\n\tnull: `color: #808080`\r\n};\r\n\r\nfunction getModel(instance){\r\n\tif(instance === undefined || instance === null)\r\n\t\treturn null;\r\n\r\n\tconst proto = Object.getPrototypeOf(instance);\r\n\tif(!proto || !proto.constructor || !is(Model, proto.constructor))\r\n\t\treturn null;\r\n\r\n\treturn proto.constructor\r\n}\r\n\r\nfunction format(x, config){\r\n\tif(x === null || x === undefined)\r\n\t\treturn [\"span\", { style: styles.null }, String(x)];\r\n\r\n\tif(typeof x === \"boolean\")\r\n\t\treturn [\"span\", { style: styles.boolean }, x];\r\n\r\n\tif(typeof x === \"number\")\r\n\t\treturn [\"span\", { style: styles.number }, x];\r\n\r\n\tif(typeof x === \"string\")\r\n\t\treturn [\"span\", { style: styles.string }, `\"${x}\"`];\r\n\r\n\tif(is(Array, x)){\r\n\t\tlet def = [];\r\n\t\tif(x.length === 1) x.push(undefined, null);\r\n\t\tfor(let i=0; i < x.length; i++){\r\n\t\t\tdef.push(format(x[i]) );\r\n\t\t\tif(i < x.length - 1) def.push(' or ');\r\n\t\t}\r\n\t\treturn [\"span\", {}, ...def]\r\n\t}\r\n\r\n\tif(isPlainObject(x))\r\n\t\treturn formatObject(x, getModel(x), config)\r\n\r\n\tif(isFunction(x) && !is(Model, x))\r\n\t\treturn [\"span\", { style: styles.function }, x.name || x.toString()];\r\n\r\n\treturn x ? ['object', { object: x, config }] : null\r\n}\r\n\r\nfunction formatObject(o, model, config){\r\n\treturn [\r\n\t\t'ol', { style: styles.list },\r\n\t\t'{',\r\n\t\t...Object.keys(o).map(prop => {\r\n\t\t\tlet isPrivate = model && model.conventionForPrivate(prop);\r\n\t\t\treturn ['li', { style: styles.listItem },\r\n\t\t\t\t['span', { style: isPrivate ? styles.private : styles.property }, prop], ': ',\r\n\t\t\t\tformat(o[prop], config)\r\n\t\t\t]\r\n\t\t}),\r\n\t\t'}'\r\n\t];\r\n}\r\n\r\nfunction formatHeader(x, config){\r\n\tif(is(Model, x))\r\n\t\treturn [\"span\", { style: styles.model }, x.name];\r\n\r\n\tif(config.fromModel || isPlainObject(x) || Array.isArray(x))\r\n\t\treturn format(x)\r\n\r\n\treturn null;\r\n}\r\n\r\nconst ModelFormatter = {\r\n\theader: function(x, config={}) {\r\n\t\tif (config.fromModel || is(Model, x))\r\n\t\t\treturn formatHeader(x, config);\r\n\r\n\t\treturn null;\r\n\t},\r\n\thasBody: function(x) {\r\n\t\treturn is(Model, x)\r\n\t},\r\n\tbody: function(x) {\r\n\t\treturn format(x.definition, { fromModel: true })\r\n\t}\r\n};\r\n\r\nconst ModelInstanceFormatter = {\r\n\theader: function(x, config={}) {\r\n\t\tif(config.fromInstance && isPlainObject(x)){\r\n\t\t\treturn formatHeader(x, config)\r\n\t\t}\r\n\r\n\t\tconst model = getModel(x);\r\n\t\tif(is(Model, model)){\r\n\t\t\treturn [\"span\", { style: styles.model }, x.constructor.name];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\thasBody: function(x) {\r\n\t\treturn x && is(ObjectModel, getModel(x))\r\n\t},\r\n\tbody: function(x) {\r\n\t\treturn formatObject(x, getModel(x), { fromInstance: true })\r\n\t}\r\n};\r\n\r\nif (typeof window !== \"undefined\") {\r\n\twindow.devtoolsFormatters = (window.devtoolsFormatters || [])\r\n\t\t.concat(ModelFormatter, ModelInstanceFormatter);\r\n}\n\nexports.Model = Model;\nexports.BasicModel = BasicModel;\nexports.ObjectModel = ObjectModel;\nexports.ArrayModel = ArrayModel;\nexports.FunctionModel = FunctionModel;\nexports.MapModel = MapModel;\nexports.SetModel = SetModel;\n\n}((this.window = this.window || {})));\n//# sourceMappingURL=object-model.js.map\n"]}