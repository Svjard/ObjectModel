{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/definition.js","../src/basic-model.js","../src/object-model.js","../src/model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["import Model from \"./model\"\r\n\r\nexport const is = (Constructor, obj) => obj instanceof Constructor\r\nexport const isString = s => typeof s === \"string\"\r\nexport const isFunction = f => typeof f === \"function\"\r\nexport const isObject = o => typeof o === \"object\"\r\nexport const isArray = a => Array.isArray(a)\r\nexport const isPlainObject = o => o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype\r\nexport const bettertypeof = x => ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1]\r\n\r\nexport function merge(target, src={}, deep, includingProto) {\r\n\tfor(let key in src){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tconst o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function define(obj, key, value, enumerable=false) {\r\n\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\r\n}\r\n\r\nexport function setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor.prototype)\r\n\tdefine(model, \"constructor\", constructor)\r\n}\r\n\r\nexport function extend(child, parent, props){\r\n\tchild.prototype = Object.assign(Object.create(parent.prototype), { constructor: child }, props)\r\n}\r\n\r\nexport function toString(obj, stack = []){\r\n\tif(stack.length > 15 || stack.includes(obj)) return '...'\r\n\tif(obj === null || obj === undefined) return String(obj)\r\n\tif(isString(obj)) return `\"${obj}\"`\r\n\tif(is(Model, obj)) return obj.toString(stack)\r\n\tstack = [obj].concat(stack)\r\n\tif(isFunction(obj)) return obj.name || obj.toString(stack)\r\n\tif(is(Array, obj)) return `[${obj.map(item => toString(item, stack)).join(', ')}]`\r\n\tif(obj.toString !== Object.prototype.toString) return obj.toString()\r\n\tif(obj && isObject(obj)) {\r\n\t\tconst props = Object.keys(obj),\r\n\t\t\t  indent = '\\t'.repeat(stack.length)\r\n\t\treturn `{${props.map(\r\n\t\t\tkey => `\\n${indent+key}: ${toString(obj[key], stack)}`\r\n\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t}\r\n\treturn String(obj)\r\n}","import {is, isArray, isPlainObject, isFunction, toString } from \"./helpers\"\r\nimport {Model} from \"./model\"\r\n\r\nexport function parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!isArray(def)) return [def]\r\n\t\tif(def.length === 1) return [...def, undefined, null]\r\n\t} else {\r\n\t\tfor(let key of Object.keys(def))\r\n\t\t\tdef[key] = parseDefinition(def[key])\r\n\t}\r\n\treturn def\r\n}\r\n\r\nexport function extendDefinition(def, newParts=[]){\r\n\tif(!isArray(newParts)) newParts = [ newParts ]\r\n\tif(newParts.length > 0){\r\n\t\tdef = newParts\r\n\t\t\t.reduce((def, ext) => def.concat(ext), isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t}\r\n\r\n\treturn def\r\n}\r\n\r\nexport function checkDefinition(obj, def, path, errors, stack, shouldCast=false){\r\n\tconst indexFound = stack.indexOf(def)\r\n\tif(indexFound !== -1 && stack.indexOf(def, indexFound+1) !== -1)\r\n\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\tif(shouldCast)\r\n\t\tobj = cast(obj, def)\r\n\r\n\r\n\tif(is(Model, def)){\r\n\t\tdef._validate(obj, path, errors, stack.concat(def))\r\n\t}\r\n\telse if(isPlainObject(def)){\r\n\t\tObject.keys(def).forEach(key => {\r\n\t\t\tconst val = obj != null ? obj[key] : undefined\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, errors, stack)\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tconst pdef = parseDefinition(def)\r\n\t\tif(pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\r\n\t\t\treturn obj\r\n\r\n\t\terrors.push({\r\n\t\t\texpected: def,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t})\r\n\t}\r\n\r\n\treturn obj\r\n}\r\n\r\nexport function checkDefinitionPart(obj, def, path, stack){\r\n\tif(obj == null) return obj === def\r\n\tif(isPlainObject(def) || is(Model, def)){ // object or model as part of union type\r\n\t\tconst errors = []\r\n\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\treturn !errors.length\r\n\t}\r\n\tif(is(RegExp, def)) return def.test(obj)\r\n\tif(def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj.constructor === def\r\n}\r\n\r\n\r\nexport function checkAssertions(obj, model, path, errors = model.errors){\r\n\tfor(let assertion of model.assertions){\r\n\t\tlet result\r\n\t\ttry {\r\n\t\t\tresult = assertion.call(model, obj)\r\n\t\t} catch(err){\r\n\t\t\tresult = err\r\n\t\t}\r\n\t\tif(result !== true){\r\n\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t`assertion \"${assertion.description}\" returned ${toString(assertionResult)} for value ${toString(value)}`\r\n\t\t\terrors.push({\r\n\t\t\t\tmessage: onFail.call(model, result, obj),\r\n\t\t\t\texpected: assertion,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function cast(obj, defNode=[]) {\r\n\tif(!obj || isPlainObject(defNode) || is(Model, obj.constructor))\r\n\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\tconst def = parseDefinition(defNode),\r\n\t      suitableModels = []\r\n\r\n\tfor (let part of def) {\r\n\t\tif(is(Model, part) && part.test(obj))\r\n\t\t\tsuitableModels.push(part)\r\n\t}\r\n\r\n\tif (suitableModels.length === 1) {\r\n\t\t// automatically cast to suitable model when explicit\r\n\t\tconst model = suitableModels[0];\r\n\t\treturn is(Model, model) ? model(obj) : new model(obj) // basic models should not be called with new\r\n\t}\r\n\r\n\tif (suitableModels.length > 1)\r\n\t\tconsole.warn(`Ambiguous model for value ${toString(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\treturn obj\r\n}","import {extend, is, setConstructor} from \"./helpers\"\r\nimport {extendModel, Model} from \"./model\"\r\nimport {extendDefinition} from \"./definition\"\r\n\r\nexport default function BasicModel() {\r\n\tconst model = function(val = model.default) {\r\n\t\tmodel.validate(val)\r\n\t\treturn val\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tconst child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor(let part of newParts){\r\n\t\t\tif(is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})","import {extendModel, Model} from \"./model\"\r\nimport { cast, checkDefinition, checkAssertions } from \"./definition\"\r\nimport { extend, is, isString, isFunction, isObject, isPlainObject, merge, setConstructor, toString } from \"./helpers\"\r\n\r\n\r\nexport default function ObjectModel(){\r\n\tconst model = function(obj = model.default) {\r\n\t\tif(!is(model, this)) return new model(obj)\r\n\t\tif(is(model, obj)) return obj\r\n\t\tmerge(this, obj, true)\r\n\t\tif(model.hasOwnProperty(\"constructor\")){\r\n\t\t\tmodel.constructor.call(this, obj)\r\n\t\t}\r\n\t\tmodel.validate(this)\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t}\r\n\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn toString(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tconst def = {}\r\n\t\tconst proto = {}\r\n\t\tconst newAssertions = []\r\n\r\n\t\tObject.assign(def, this.definition)\r\n\t\tmerge(proto, this.prototype, false, true)\r\n\t\tfor(let part of newParts){\r\n\t\t\tif(is(Model, part)){\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif(isFunction(part)) merge(proto, part.prototype, true, true)\r\n\t\t\tif(isObject(part)) merge(def, part, true, true)\r\n\t\t}\r\n\t\tdelete proto.constructor\r\n\r\n\t\tconst submodel = extendModel(new ObjectModel(def), this, proto)\r\n\t\tsubmodel.assertions.push(...newAssertions)\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t_validate(obj, path, errors, stack){\r\n\t\tif(!isObject(obj)){\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\t}\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})\r\n\r\nfunction getProxy(model, obj, def, path) {\r\n\tif(!isPlainObject(def)) {\r\n\t\treturn cast(obj, def)\r\n\t}\r\n\r\n\treturn new Proxy(obj || {}, {\r\n\t\tgetPrototypeOf(){\r\n\t\t\treturn path ? Object.prototype : model.prototype\r\n\t\t},\r\n\r\n\t\tget(o, key) {\r\n\t\t\tif(!isString(key)) return Reflect.get(o, key)\r\n\r\n\t\t\tconst newPath = (path ? path + '.' + key : key),\r\n\t\t\t      defPart = def[key];\r\n\r\n\t\t\tif(key in def && model.conventionForPrivate(key)){\r\n\t\t\t\tmodel.errors.push({\r\n\t\t\t\t\tmessage: `cannot access to private property ${newPath}`\r\n\t\t\t\t})\r\n\t\t\t\tmodel.unstackErrors()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif(o[key] && o.hasOwnProperty(key) && !isPlainObject(defPart) && !is(Model, o[key].constructor)){\r\n\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t}\r\n\r\n\t\t\tif (isFunction(o[key]) && o[key].bind) {\r\n\t\t\t\treturn o[key].bind(o); // auto-bind methods to original object, so they can access private props\r\n\t\t\t}\r\n\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, (newPath) => {\r\n\t\t\t\tReflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(){\r\n\t\t\treturn Reflect.ownKeys(def).filter(key => !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(o, key){\r\n\t\t\tlet descriptor;\r\n\t\t\tif(!model.conventionForPrivate(key)){\r\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tif(descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction controlMutation(model, def, path, o, key, applyMutation){\r\n\tconst newPath = (path ? path + '.' + key : key),\r\n\t      isPrivate = model.conventionForPrivate(key),\r\n\t      isConstant = model.conventionForConstant(key),\r\n\t      isOwnProperty = o.hasOwnProperty(key),\r\n\t      initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\tif(key in def && (isPrivate || (isConstant && o[key] !== undefined))){\r\n\t\tmodel.errors.push({\r\n\t\t\tmessage: `cannot modify ${isPrivate ? \"private\" : \"constant\"} ${key}`\r\n\t\t})\r\n\t}\r\n\r\n\tif(def.hasOwnProperty(key)){\r\n\t\tapplyMutation(newPath)\r\n\t\tcheckDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\tcheckAssertions(o, model, newPath)\r\n\t} else {\r\n\t\tmodel.errors.push({\r\n\t\t\tmessage: `cannot find property ${newPath} in the model definition`\r\n\t\t})\r\n\t}\r\n\r\n\tif(model.errors.length){\r\n\t\tif(isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\tmodel.unstackErrors()\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}","import {bettertypeof, define, extend, is, isPlainObject, toString} from \"./helpers\"\r\nimport {checkAssertions, checkDefinition, parseDefinition} from \"./definition\"\r\nimport BasicModel from \"./basic-model\"\r\nimport ObjectModel from \"./object-model\"\r\n\r\n\r\nexport function Model(def){\r\n\treturn isPlainObject(def) ? new ObjectModel(def) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn parseDefinition(this.definition).map(d => toString(d, stack)).join(\" or \")\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t_init(args){\r\n\t\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\t\tthis.definition = args[0]\r\n\t\tthis.assertions = [...this.assertions]\r\n\t\tdefine(this, \"errors\", [])\r\n\t\tdelete this.name;\r\n\t},\r\n\r\n\t_validate(obj, path, errors, stack){\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis._validate(obj, null, this.errors, [])\r\n\t\tthis.unstackErrors(errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector\r\n\t\tthis.errorCollector = () => { failed = true }\r\n\t\tnew this(obj)\r\n\t\tthis.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\t// throw all errors collected\r\n\tunstackErrors(errorCollector){\r\n\t\tif (!this.errors.length) return\r\n\t\tif (!errorCollector) errorCollector = this.errorCollector\r\n\t\tconst errors = this.errors.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tconst def = is(Array, err.expected) ? err.expected : [err.expected]\r\n\t\t\t\terr.message = (\"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => toString(d)).join(\" or \")\r\n\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + toString(err.received))\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t})\r\n\t\tthis.errors = []\r\n\t\terrorCollector.call(this, errors)\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\tassert(assertion, description = toString(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\nexport function extendModel(child, parent, newProps){\r\n\textend(child, parent, newProps)\r\n\tchild.assertions.push(...parent.assertions)\r\n\tchild.errorCollector = parent.errorCollector\r\n\treturn child\r\n}\r\n\r\nexport default Model;","import {extendModel, Model} from \"./model\"\r\nimport {checkDefinition, checkAssertions, cast, extendDefinition} from \"./definition\"\r\nimport { extend, is, setConstructor, toString } from \"./helpers\"\r\n\r\nconst MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nfunction ArrayModel() {\r\n\r\n\tconst model = function(array = model.default) {\r\n\t\tif(!is(model, this)) return new model(array)\r\n\t\tmodel.validate(array)\r\n\t\treturn new Proxy(array, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (MUTATOR_METHODS.includes(key)) return proxifyMethod(arr, key, model)\r\n\t\t\t\treturn arr[key]\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key){\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Array)\r\n\tsetConstructor(model, ArrayModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(arr, path, errors, stack){\r\n\t\tif(is(Array, arr))\r\n\t\t\tarr.forEach((a,i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack, true)\r\n\t\t\t})\r\n\t\telse errors.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: arr,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nfunction proxifyMethod(array, method, model){\r\n\treturn function() {\r\n\t\tconst testArray = array.slice();\r\n\t\t[][method].apply(testArray, arguments)\r\n\t\tmodel.validate(testArray)\r\n\t\tconst returnValue = [][method].apply(array, arguments)\r\n\t\tarray.forEach((a,i)=> array[i] = cast(a, model.definition))\r\n\t\treturn returnValue\r\n\t}\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tlet path = `Array[${key}]`;\r\n\tif(parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [], true)\r\n\r\n\tconst testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tconst isSuccess = !model.unstackErrors()\r\n\tif(isSuccess){\r\n\t\tarray[key] = value\r\n\t}\r\n\treturn isSuccess\r\n}\r\n\r\nexport default ArrayModel","import {extendModel, Model} from \"./model\"\r\nimport {checkDefinition, checkAssertions, extendDefinition} from \"./definition\"\r\nimport { extend, isFunction, setConstructor, toString } from \"./helpers\"\r\n\r\n\r\nfunction FunctionModel() {\r\n\r\n\tconst model = function(fn = model.default) {\r\n\t\treturn new Proxy(fn, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tconst def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif(!model.errors.length){\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\r\n\t\t\t\t}\r\n\t\t\t\tmodel.unstackErrors()\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\textend(model, Function)\r\n\tsetConstructor(model, FunctionModel)\r\n\tmodel._init([ { arguments: [...arguments] } ])\r\n\r\n\treturn model\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack){\r\n\t\tlet out = 'Function(' + this.definition.arguments.map(argDef => toString(argDef, stack)).join(\",\") +')'\r\n\t\tif(\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + toString(this.definition.return)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\textend(newArgs, newReturns) {\r\n\t\tconst args = this.definition.arguments\r\n\t\tconst mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i]))\r\n\t\tconst mixedReturns = extendDefinition(this.definition.return, newReturns)\r\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\r\n\t},\r\n\r\n\t_validate(f, path, errors){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: \"Function\",\r\n\t\t\t\treceived: f,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function(args){\r\n\tif (args.length > this.definition.arguments.length) return args\r\n\treturn true\r\n}, function(args){\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${toString(this)}, got ${args.length}`\r\n})\r\n\r\nexport default FunctionModel","import {extendModel, Model} from \"./model\"\r\nimport { checkDefinition, checkAssertions, extendDefinition } from \"./definition\"\r\nimport { extend, setConstructor, toString } from \"./helpers\"\r\n\r\nconst MAP_MUTATOR_METHODS = [\"set\", \"delete\", \"clear\"]\r\n\r\nfunction MapModel(key, value) {\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst map = new Map(iterable)\r\n\t\tmodel.validate(map)\r\n\t\treturn new Proxy(map, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tget(map, key) {\r\n\t\t\t\tif (MAP_MUTATOR_METHODS.includes(key)) return proxifyMethod(map, key, model)\r\n\t\t\t\treturn map[key]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Map)\r\n\tsetConstructor(model, MapModel)\r\n\tmodel._init([ { key, value } ])\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Map of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(map, path, errors, stack){\r\n\t\tif(map instanceof Map) {\r\n\t\t\tfor(let [key, value] of map){\r\n\t\t\t\tlet subPath = `${path || \"Map\"}[${toString(key)}]`\r\n\t\t\t\tcheckDefinition(key, this.definition.key, subPath, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, subPath, errors, stack)\r\n\t\t\t}\r\n\t\t} else errors.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: map,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(map, this, errors)\r\n\t},\r\n\r\n\textend(newKeys, newValues){\r\n\t\tconst { key, value } = this.definition\r\n\t\treturn extendModel(new MapModel(extendDefinition(key, newKeys), extendDefinition(value, newValues)), this)\r\n\t}\r\n})\r\n\r\nfunction proxifyMethod(map, method, model){\r\n\treturn function() {\r\n\t\tconst testMap = new Map(map)\r\n\t\tMap.prototype[method].apply(testMap, arguments)\r\n\t\tmodel.validate(testMap)\r\n\t\treturn Map.prototype[method].apply(map, arguments)\r\n\t}\r\n}\r\n\r\nexport default MapModel","import { Model } from \"./model\"\r\nimport { checkDefinition, checkAssertions } from \"./definition\"\r\nimport { extend, setConstructor, toString } from \"./helpers\"\r\n\r\nconst SET_MUTATOR_METHODS = [\"add\", \"delete\", \"clear\"]\r\n\r\nfunction SetModel(){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst _set = new Set(iterable)\r\n\t\tmodel.validate(_set)\r\n\r\n\t\tfor(let method of SET_MUTATOR_METHODS){\r\n\t\t\t_set[method] = function() {\r\n\t\t\t\tconst testSet = new Set(_set)\r\n\t\t\t\tSet.prototype[method].apply(testSet, arguments)\r\n\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\treturn Set.prototype[method].apply(_set, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetConstructor(_set, model)\r\n\t\treturn _set\r\n\t}\r\n\r\n\textend(model, Set)\r\n\tsetConstructor(model, SetModel);\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(_set, path, errors, stack){\r\n\t\tif(_set instanceof Set){\r\n\t\t\tfor(let item of _set.values()){\r\n\t\t\t\tcheckDefinition(item, this.definition, (path || \"Set\"), errors, stack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: _set,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t\tcheckAssertions(_set, this, errors)\r\n\t}\r\n})\r\n\r\nexport default SetModel"],"names":["merge","target","src","deep","includingProto","key","hasOwnProperty","isPlainObject","o","define","obj","value","enumerable","Object","defineProperty","writable","configurable","setConstructor","model","constructor","setPrototypeOf","prototype","extend","child","parent","props","assign","create","toString","stack","length","includes","undefined","String","isString","is","Model","concat","isFunction","name","Array","map","item","join","isObject","keys","indent","repeat","slice","parseDefinition","def","isArray","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","path","errors","shouldCast","indexFound","cast","_validate","forEach","val","pdef","some","part","checkDefinitionPart","push","expected","received","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","assertions","result","call","err","onFail","description","assertionResult","message","defNode","suitableModels","console","warn","BasicModel","default","validate","_init","arguments","ObjectModel","this","getProxy","definition","Proxy","[object Object]","Reflect","get","newPath","defPart","conventionForPrivate","unstackErrors","bind","controlMutation","set","deleteProperty","args","has","ownKeys","descriptor","getOwnPropertyDescriptor","applyMutation","isPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","extendModel","newProps","errorCollector","ArrayModel","array","getPrototypeOf","arr","MUTATOR_METHODS","proxifyMethod","setArrayKey","method","testArray","apply","returnValue","a","i","parseInt","isSuccess","FunctionModel","fn","ctx","argDef","return","Function","MapModel","iterable","Map","MAP_MUTATOR_METHODS","testMap","SetModel","_set","Set","SET_MUTATOR_METHODS","testSet","Constructor","s","f","bettertypeof","x","match","p","proto","newAssertions","submodel","toUpperCase","d","Error","failed","initialErrorCollector","e","TypeError","replace","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","subPath","newKeys","newValues","values"],"mappings":"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"}