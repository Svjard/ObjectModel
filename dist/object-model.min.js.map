{
	"version": 3,
	"file": "object-model.min.js",
	"sources": [
		"../src/helpers.js",
		"../src/definition.js",
		"../src/basic-model.js",
		"../src/object-model.js",
		"../src/model.js",
		"../src/array-model.js",
		"../src/function-model.js",
		"../src/map-model.js",
		"../src/set-model.js"
	],
	"sourcesContent": [
		"import Model from \"./model\"\r\n\r\nexport const is = (Constructor, obj) => obj instanceof Constructor\r\nexport const isString = s => typeof s === \"string\"\r\nexport const isFunction = f => typeof f === \"function\"\r\nexport const isObject = o => typeof o === \"object\"\r\nexport const isArray = a => Array.isArray(a)\r\nexport const isPlainObject = o => o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype\r\nexport const bettertypeof = x => ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1]\r\n\r\nexport function merge(target, src = {}, deep, includingProto) {\r\n\tfor (let key in src) {\r\n\t\tif (includingProto || src.hasOwnProperty(key)) {\r\n\t\t\tif (deep && isPlainObject(src[key])) {\r\n\t\t\t\tconst o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function define(obj, key, value, enumerable = false) {\r\n\tObject.defineProperty(obj, key, {value, enumerable, writable: true, configurable: true})\r\n}\r\n\r\nexport function setConstructor(model, constructor) {\r\n\tObject.setPrototypeOf(model, constructor.prototype)\r\n\tdefine(model, \"constructor\", constructor)\r\n}\r\n\r\nexport function extend(child, parent, props) {\r\n\tchild.prototype = Object.assign(Object.create(parent.prototype), {constructor: child}, props)\r\n}\r\n\r\nexport function toString(obj, stack = []) {\r\n\tif (stack.length > 15 || stack.includes(obj)) return '...'\r\n\tif (obj === null || obj === undefined) return String(obj)\r\n\tif (isString(obj)) return `\"${obj}\"`\r\n\tif (is(Model, obj)) return obj.toString(stack)\r\n\r\n\tstack.unshift(obj)\r\n\r\n\tif (isFunction(obj)) return obj.name || obj.toString(stack)\r\n\tif (isArray(obj)) return `[${obj.map(item => toString(item, stack)).join(', ')}]`\r\n\tif (obj.toString !== Object.prototype.toString) return obj.toString()\r\n\tif (obj && isObject(obj)) {\r\n\t\tconst props  = Object.keys(obj),\r\n\t\t      indent = '\\t'.repeat(stack.length)\r\n\t\treturn `{${props.map(\r\n\t\t\tkey => `\\n${indent + key}: ${toString(obj[key], stack)}`\r\n\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t}\r\n\r\n\treturn String(obj)\r\n}",
		"import {is, isArray, isFunction, isPlainObject, toString} from \"./helpers\"\r\nimport Model from \"./model\"\r\n\r\nexport function parseDefinition(def) {\r\n\tif (isPlainObject(def)) {\r\n\t\tfor (let key of Object.keys(def)) {\r\n\t\t\tdef[key] = parseDefinition(def[key])\r\n\t\t}\r\n\t} else {\r\n\t\tif (!isArray(def)) return [def]\r\n\t\tif (def.length === 1) return [...def, undefined, null]\r\n\t}\r\n\r\n\treturn def\r\n}\r\n\r\nexport function extendDefinition(def, newParts = []) {\r\n\tif (!isArray(newParts)) newParts = [newParts]\r\n\tif (newParts.length > 0) {\r\n\t\tdef = newParts\r\n\t\t\t.reduce((def, ext) => def.concat(ext), isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t}\r\n\r\n\treturn def\r\n}\r\n\r\nexport function checkDefinition(obj, def, path, errors, stack, shouldCast = false) {\r\n\tconst indexFound = stack.indexOf(def)\r\n\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\r\n\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\tif (shouldCast)\r\n\t\tobj = cast(obj, def)\r\n\r\n\tif (is(Model, def)) {\r\n\t\tdef._validate(obj, path, errors, stack.concat(def))\r\n\t}\r\n\telse if (isPlainObject(def)) {\r\n\t\tObject.keys(def).forEach(key => {\r\n\t\t\tconst val = obj != null ? obj[key] : undefined\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, errors, stack)\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tconst pdef = parseDefinition(def)\r\n\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\r\n\t\t\treturn obj\r\n\r\n\t\terrors.push({\r\n\t\t\texpected: def,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t})\r\n\t}\r\n\r\n\treturn obj\r\n}\r\n\r\nexport function checkDefinitionPart(obj, def, path, stack) {\r\n\tif (obj == null) return obj === def\r\n\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\r\n\t\tconst errors = []\r\n\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\treturn !errors.length\r\n\t}\r\n\tif (is(RegExp, def)) return def.test(obj)\r\n\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj.constructor === def\r\n}\r\n\r\n\r\nexport function checkAssertions(obj, model, path, errors = model.errors) {\r\n\tfor (let assertion of model.assertions) {\r\n\t\tlet result\r\n\t\ttry {\r\n\t\t\tresult = assertion.call(model, obj)\r\n\t\t} catch (err) {\r\n\t\t\tresult = err\r\n\t\t}\r\n\t\tif (result !== true) {\r\n\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t`assertion \"${assertion.description}\" returned ${toString(assertionResult)} for value ${toString(value)}`\r\n\t\t\terrors.push({\r\n\t\t\t\tmessage: onFail.call(model, result, obj),\r\n\t\t\t\texpected: assertion,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function cast(obj, defNode = []) {\r\n\tif (!obj || isPlainObject(defNode) || is(Model, obj.constructor))\r\n\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\tconst def = parseDefinition(defNode);\r\n\tconst suitableModels = []\r\n\r\n\tfor (let part of def) {\r\n\t\tif (is(Model, part) && part.test(obj))\r\n\t\t\tsuitableModels.push(part)\r\n\t}\r\n\r\n\tif (suitableModels.length === 1) {\r\n\t\t// automatically cast to suitable model when explicit\r\n\t\tconst model = suitableModels[0];\r\n\t\treturn is(Model, model) ? model(obj) : new model(obj) // basic models should not be called with new\r\n\t}\r\n\r\n\tif (suitableModels.length > 1)\r\n\t\tconsole.warn(`Ambiguous model for value ${toString(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\treturn obj\r\n}",
		"import {extend, is, setConstructor} from \"./helpers\"\r\nimport {extendDefinition} from \"./definition\"\r\nimport {extendModel, initModel, Model} from \"./model\"\r\n\r\n\r\nexport default function BasicModel() {\r\n\tconst model = function (val = model.default) {\r\n\t\tmodel.validate(val)\r\n\t\treturn val\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tinitModel(model, arguments)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model, {\r\n\textend(...newParts) {\r\n\t\tconst child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\r\n\t\t}\r\n\r\n\t\treturn child\r\n\t}\r\n})",
		"import {extendModel, initModel, Model, unstackErrors} from \"./model\"\r\nimport {cast, checkAssertions, checkDefinition} from \"./definition\"\r\nimport {extend, is, isFunction, isObject, isPlainObject, isString, merge, setConstructor, toString} from \"./helpers\"\r\n\r\n\r\nexport default function ObjectModel() {\r\n\tconst model = function (obj = model.default) {\r\n\t\tif (!is(model, this)) return new model(obj)\r\n\t\tif (is(model, obj)) return obj\r\n\t\tmerge(this, obj, true)\r\n\t\tif (model.hasOwnProperty(\"constructor\")) {\r\n\t\t\tmodel.constructor.call(this, obj)\r\n\t\t}\r\n\t\tmodel.validate(this)\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t}\r\n\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tinitModel(model, arguments)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tsealed: true,\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn toString(this.definition, stack)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tconst def = {}\r\n\t\tconst proto = {}\r\n\t\tconst newAssertions = []\r\n\r\n\t\tObject.assign(def, this.definition)\r\n\t\tmerge(proto, this.prototype, false, true)\r\n\t\tfor (let part of newParts) {\r\n\t\t\tif (is(Model, part)) {\r\n\t\t\t\tmerge(def, part.definition, true)\r\n\t\t\t\tnewAssertions.push(...part.assertions)\r\n\t\t\t}\r\n\t\t\tif (isFunction(part)) merge(proto, part.prototype, true, true)\r\n\t\t\tif (isObject(part)) merge(def, part, true, true)\r\n\t\t}\r\n\t\tdelete proto.constructor\r\n\r\n\t\tconst submodel = extendModel(new ObjectModel(def), this, proto)\r\n\t\tsubmodel.assertions.push(...newAssertions)\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t_validate(obj, path, errors, stack){\r\n\t\tif (isObject(obj)) checkDefinition(obj, this.definition, path, errors, stack)\r\n\t\telse errors.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})\r\n\r\nfunction getProxy(model, obj, def, path) {\r\n\tif (!isPlainObject(def))\r\n\t\treturn cast(obj, def)\r\n\r\n\treturn new Proxy(obj || {}, {\r\n\t\tgetPrototypeOf(){\r\n\t\t\treturn path ? Object.prototype : model.prototype\r\n\t\t},\r\n\r\n\t\tget(o, key) {\r\n\t\t\tif (!isString(key))\r\n\t\t\t\treturn Reflect.get(o, key)\r\n\r\n\t\t\tconst newPath = (path ? path + '.' + key : key),\r\n\t\t\t      defPart = def[key];\r\n\r\n\t\t\tif (key in def && model.conventionForPrivate(key)) {\r\n\t\t\t\tmodel.errors.push({\r\n\t\t\t\t\tmessage: `cannot access to private property ${newPath}`\r\n\t\t\t\t})\r\n\t\t\t\tunstackErrors(model)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (o[key] && o.hasOwnProperty(key) && !isPlainObject(defPart) && !is(Model, o[key].constructor)) {\r\n\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t}\r\n\r\n\t\t\tif (isFunction(o[key]) && o[key].bind) {\r\n\t\t\t\treturn o[key].bind(o); // auto-bind methods to original object, so they can access private props\r\n\t\t\t}\r\n\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, (newPath) => {\r\n\t\t\t\tReflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(){\r\n\t\t\treturn Reflect.ownKeys(def).filter(key => !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(o, key){\r\n\t\t\tlet descriptor;\r\n\t\t\tif (!model.conventionForPrivate(key)) {\r\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction controlMutation(model, def, path, o, key, applyMutation) {\r\n\tconst newPath       = (path ? path + '.' + key : key),\r\n\t      isPrivate     = model.conventionForPrivate(key),\r\n\t      isConstant    = model.conventionForConstant(key),\r\n\t      isOwnProperty = o.hasOwnProperty(key)\r\n\r\n\tconst initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\tif (key in def && (isPrivate || (isConstant && o[key] !== undefined))) {\r\n\t\tmodel.errors.push({\r\n\t\t\tmessage: `cannot modify ${isPrivate ? \"private\" : \"constant\"} ${key}`\r\n\t\t})\r\n\t}\r\n\r\n\tif (!model.sealed ||def.hasOwnProperty(key)) {\r\n\t\tapplyMutation(newPath)\r\n\t\tcheckDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\tcheckAssertions(o, model, newPath)\r\n\t} else {\r\n\t\tmodel.errors.push({\r\n\t\t\tmessage: `cannot find property ${newPath} in the model definition`\r\n\t\t})\r\n\t}\r\n\r\n\tif (model.errors.length) {\r\n\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\tunstackErrors(model)\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}",
		"import {bettertypeof, define, extend, isArray, isPlainObject, toString} from \"./helpers\"\nimport {checkAssertions, checkDefinition, parseDefinition} from \"./definition\"\nimport BasicModel from \"./basic-model\"\nimport ObjectModel from \"./object-model\"\n\n\nexport function Model(def) {\n\treturn isPlainObject(def) ? new ObjectModel(def) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack){\n\t\treturn parseDefinition(this.definition).map(d => toString(d, stack)).join(\" or \")\n\t},\n\n\tas(name){\n\t\tdefine(this, \"name\", name);\n\t\treturn this\n\t},\n\n\tdefaultTo(val){\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\t_validate(obj, path, errors, stack){\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t},\n\n\tvalidate(obj, errorCollector){\n\t\tthis._validate(obj, null, this.errors, [])\n\t\tunstackErrors(this, errorCollector)\n\t},\n\n\ttest(obj){\n\t\tlet failed,\n\t\t    initialErrorCollector = this.errorCollector\n\n\t\tthis.errorCollector = () => {\n\t\t\tfailed = true\n\t\t}\n\n\t\tnew this(obj) // may trigger this.errorCollector\n\n\t\tthis.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors){\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = toString(assertion)){\n\t\tdefine(assertion, \"description\", description);\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\nexport function initModel(model, args) {\n\tif (args.length === 0) throw new Error(\"Model definition is required\");\n\tmodel.definition = args[0]\n\tmodel.assertions = [...model.assertions]\n\tdefine(model, \"errors\", [])\n\tdelete model.name;\n}\n\nexport function extendModel(child, parent, newProps) {\n\textend(child, parent, newProps)\n\tchild.assertions.push(...parent.assertions)\n\tchild.errorCollector = parent.errorCollector\n\treturn child\n}\n\nexport function unstackErrors(model, errorCollector = model.errorCollector) {\n\tif (!model.errors.length) return\n\n\tconst errors = model.errors.map(err => {\n\t\tif (!err.message) {\n\t\t\tconst def = isArray(err.expected) ? err.expected : [err.expected]\n\t\t\terr.message = (\"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => toString(d)).join(\" or \")\n\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + toString(err.received))\n\t\t}\n\t\treturn err\n\t})\n\tmodel.errors = []\n\terrorCollector.call(model, errors) // throw all errors collected\n}\n\nexport default Model",
		"import {extendModel, initModel, Model, unstackErrors} from \"./model\"\r\nimport {cast, checkAssertions, checkDefinition, extendDefinition} from \"./definition\"\r\nimport {extend, is, isArray, setConstructor, toString} from \"./helpers\"\r\n\r\nconst MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nexport default function ArrayModel() {\r\n\r\n\tconst model = function (array = model.default) {\r\n\t\tif (!is(model, this)) return new model(array)\r\n\t\tmodel.validate(array)\r\n\t\treturn new Proxy(array, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (MUTATOR_METHODS.includes(key)) return proxifyMethod(arr, [][key], model)\r\n\t\t\t\treturn arr[key]\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key){\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Array)\r\n\tsetConstructor(model, ArrayModel)\r\n\tinitModel(model, arguments)\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(arr, path, errors, stack){\r\n\t\tif (isArray(arr))\r\n\t\t\tarr.forEach((a, i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack, true)\r\n\t\t\t})\r\n\t\telse errors.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: arr,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\r\n\t}\r\n})\r\n\r\nfunction proxifyMethod(array, method, model) {\r\n\treturn function () {\r\n\t\tconst testArray = array.slice()\r\n\t\tmethod.apply(testArray, arguments)\r\n\t\tmodel.validate(testArray)\r\n\t\tconst returnValue = method.apply(array, arguments)\r\n\t\tarray.forEach((a, i) => array[i] = cast(a, model.definition))\r\n\t\treturn returnValue\r\n\t}\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model) {\r\n\tlet path = `Array[${key}]`;\r\n\tif (parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [], true)\r\n\r\n\tconst testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tconst isSuccess = !unstackErrors(model)\r\n\tif (isSuccess) array[key] = value\r\n\treturn isSuccess\r\n}",
		"import {extendModel, initModel, Model, unstackErrors} from \"./model\"\nimport {checkAssertions, checkDefinition, extendDefinition} from \"./definition\"\nimport {extend, isFunction, setConstructor, toString} from \"./helpers\"\n\n\nexport default function FunctionModel() {\n\n\tconst model = function (fn = model.default) {\n\t\treturn new Proxy(fn, {\n\t\t\tgetPrototypeOf: () => model.prototype,\n\n\t\t\tapply (fn, ctx, args) {\n\t\t\t\tconst def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t});\n\t}\n\n\textend(model, Function)\n\tsetConstructor(model, FunctionModel)\n\tinitModel(model, [{arguments: [...arguments]}])\n\n\treturn model\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack){\n\t\tlet out = 'Function(' + this.definition.arguments.map(argDef => toString(argDef, stack)).join(\",\") + ')'\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + toString(this.definition.return)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def){\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tconst args = this.definition.arguments\n\t\tconst mixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i]))\n\t\tconst mixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t_validate(f, path, errors){\n\t\tif (!isFunction(f)) {\n\t\t\terrors.push({\n\t\t\t\texpected: \"Function\",\n\t\t\t\treceived: f,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n})\n\nFunctionModel.prototype.assert(function (args) {\n\tif (args.length > this.definition.arguments.length) return args\n\treturn true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${toString(this)}, got ${args.length}`\n})",
		"import {extendModel, initModel, Model} from \"./model\"\r\nimport {checkAssertions, checkDefinition, extendDefinition} from \"./definition\"\r\nimport {extend, setConstructor, toString} from \"./helpers\"\r\n\r\nconst MAP_MUTATOR_METHODS = [\"set\", \"delete\", \"clear\"]\r\n\r\nexport default function MapModel(key, value) {\r\n\r\n\tconst model = function (iterable) {\r\n\t\tconst map = new Map(iterable)\r\n\t\tmodel.validate(map)\r\n\t\treturn new Proxy(map, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tget(map, key) {\r\n\t\t\t\tif (MAP_MUTATOR_METHODS.includes(key)) return proxifyMethod(map, key, model)\r\n\t\t\t\treturn map[key]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Map)\r\n\tsetConstructor(model, MapModel)\r\n\tinitModel(model, [{key, value}])\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Map of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(map, path, errors, stack){\r\n\t\tif (map instanceof Map) {\r\n\t\t\tfor (let [key, value] of map) {\r\n\t\t\t\tlet subPath = `${path || \"Map\"}[${toString(key)}]`\r\n\t\t\t\tcheckDefinition(key, this.definition.key, subPath, errors, stack)\r\n\t\t\t\tcheckDefinition(value, this.definition.value, subPath, errors, stack)\r\n\t\t\t}\r\n\t\t} else errors.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: map,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(map, this, errors)\r\n\t},\r\n\r\n\textend(newKeys, newValues){\r\n\t\tconst {key, value} = this.definition\r\n\t\treturn extendModel(new MapModel(extendDefinition(key, newKeys), extendDefinition(value, newValues)), this)\r\n\t}\r\n})\r\n\r\nfunction proxifyMethod(map, method, model) {\r\n\treturn function () {\r\n\t\tconst testMap = new Map(map)\r\n\t\tMap.prototype[method].apply(testMap, arguments)\r\n\t\tmodel.validate(testMap)\r\n\t\treturn Map.prototype[method].apply(map, arguments)\r\n\t}\r\n}",
		"import {initModel, Model} from \"./model\"\r\nimport {checkAssertions, checkDefinition} from \"./definition\"\r\nimport {extend, setConstructor, toString} from \"./helpers\"\r\n\r\nconst SET_MUTATOR_METHODS = [\"add\", \"delete\", \"clear\"]\r\n\r\nexport default function SetModel() {\r\n\r\n\tconst model = function (iterable) {\r\n\t\tconst _set = new Set(iterable)\r\n\t\tmodel.validate(_set)\r\n\r\n\t\tfor (let method of SET_MUTATOR_METHODS) {\r\n\t\t\t_set[method] = function () {\r\n\t\t\t\tconst testSet = new Set(_set)\r\n\t\t\t\tSet.prototype[method].apply(testSet, arguments)\r\n\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\treturn Set.prototype[method].apply(_set, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetConstructor(_set, model)\r\n\t\treturn _set\r\n\t}\r\n\r\n\textend(model, Set)\r\n\tsetConstructor(model, SetModel);\r\n\tinitModel(model, arguments)\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(_set, path, errors, stack){\r\n\t\tif (_set instanceof Set) {\r\n\t\t\tfor (let item of _set.values()) {\r\n\t\t\t\tcheckDefinition(item, this.definition, (path || \"Set\"), errors, stack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: _set,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t\tcheckAssertions(_set, this, errors)\r\n\t}\r\n})"
	],
	"names": [
		"merge",
		"target",
		"src",
		"deep",
		"includingProto",
		"key",
		"hasOwnProperty",
		"isPlainObject",
		"o",
		"define",
		"obj",
		"value",
		"enumerable",
		"Object",
		"defineProperty",
		"writable",
		"configurable",
		"setConstructor",
		"model",
		"constructor",
		"setPrototypeOf",
		"prototype",
		"extend",
		"child",
		"parent",
		"props",
		"assign",
		"create",
		"toString",
		"stack",
		"length",
		"includes",
		"undefined",
		"String",
		"isString",
		"is",
		"Model",
		"unshift",
		"isFunction",
		"name",
		"isArray",
		"map",
		"item",
		"join",
		"isObject",
		"keys",
		"indent",
		"repeat",
		"slice",
		"parseDefinition",
		"def",
		"extendDefinition",
		"newParts",
		"reduce",
		"ext",
		"concat",
		"filter",
		"index",
		"self",
		"indexOf",
		"checkDefinition",
		"path",
		"errors",
		"shouldCast",
		"indexFound",
		"cast",
		"_validate",
		"forEach",
		"val",
		"pdef",
		"some",
		"part",
		"checkDefinitionPart",
		"push",
		"expected",
		"received",
		"RegExp",
		"test",
		"Number",
		"Date",
		"isNaN",
		"checkAssertions",
		"assertion",
		"assertions",
		"result",
		"call",
		"err",
		"onFail",
		"description",
		"assertionResult",
		"message",
		"defNode",
		"suitableModels",
		"console",
		"warn",
		"BasicModel",
		"default",
		"validate",
		"initModel",
		"arguments",
		"ObjectModel",
		"this",
		"getProxy",
		"definition",
		"Proxy",
		"[object Object]",
		"Reflect",
		"get",
		"newPath",
		"defPart",
		"conventionForPrivate",
		"unstackErrors",
		"bind",
		"controlMutation",
		"set",
		"deleteProperty",
		"args",
		"has",
		"ownKeys",
		"descriptor",
		"getOwnPropertyDescriptor",
		"applyMutation",
		"isPrivate",
		"isConstant",
		"conventionForConstant",
		"isOwnProperty",
		"initialPropDescriptor",
		"sealed",
		"Error",
		"extendModel",
		"newProps",
		"errorCollector",
		"d",
		"bettertypeof",
		"ArrayModel",
		"array",
		"getPrototypeOf",
		"arr",
		"MUTATOR_METHODS",
		"proxifyMethod",
		"setArrayKey",
		"Array",
		"method",
		"testArray",
		"apply",
		"returnValue",
		"a",
		"i",
		"parseInt",
		"isSuccess",
		"FunctionModel",
		"fn",
		"ctx",
		"argDef",
		"return",
		"Function",
		"MapModel",
		"iterable",
		"Map",
		"MAP_MUTATOR_METHODS",
		"testMap",
		"SetModel",
		"_set",
		"Set",
		"SET_MUTATOR_METHODS",
		"testSet",
		"Constructor",
		"s",
		"f",
		"x",
		"match",
		"p",
		"proto",
		"newAssertions",
		"submodel",
		"toUpperCase",
		"failed",
		"initialErrorCollector",
		"e",
		"TypeError",
		"replace",
		"out",
		"newArgs",
		"newReturns",
		"mixedArgs",
		"mixedReturns",
		"assert",
		"subPath",
		"newKeys",
		"newValues",
		"values"
	],
	"mappings": "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"
}