{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/definition.js","../src/basic-model.js","../src/object-model.js","../src/model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["import Model from \"./model\"\r\n\r\nconst defineProperty = Object.defineProperty\r\n\r\nexport function is(Constructor, obj){\r\n\treturn obj instanceof Constructor\r\n}\r\n\r\nexport function isString(o){\r\n\treturn typeof o === \"string\"\r\n}\r\n\r\nexport function isFunction(o){\r\n\treturn typeof o === \"function\"\r\n}\r\n\r\nexport function isObject(o){\r\n    return typeof o === \"object\"\r\n}\r\n\r\nexport function isPlainObject(o){\r\n\treturn o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype\r\n}\r\n\r\nexport function bettertypeof(x){\r\n\treturn ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1]\r\n}\r\n\r\nexport function merge(target, src={}, deep, includingProto) {\r\n\tfor(let key in src){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tconst o = {}\r\n\t\t\t\tmerge(o, target[key], deep)\r\n\t\t\t\tmerge(o, src[key], deep)\r\n\t\t\t\ttarget[key] = o\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function define(obj, key, value, enumerable=false) {\r\n\tdefineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\r\n}\r\n\r\nexport function setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor.prototype)\r\n\tdefine(model, \"constructor\", constructor)\r\n}\r\n\r\nexport function extend(child, parent, props){\r\n\tchild.prototype = Object.assign(Object.create(parent.prototype), { constructor: child }, props)\r\n}\r\n\r\nexport function toString(obj, stack = []){\r\n\tif(stack.length > 15 || stack.includes(obj)) return '...'\r\n\tif(obj === null || obj === undefined) return String(obj)\r\n\tif(isString(obj)) return `\"${obj}\"`\r\n\tif(is(Model, obj)) return obj.toString(stack)\r\n\tstack = [obj].concat(stack)\r\n\tif(isFunction(obj)) return obj.name || obj.toString(stack)\r\n\tif(is(Array, obj)) return `[${obj.map(item => toString(item, stack)).join(', ')}]`\r\n\tif(obj.toString !== Object.prototype.toString) return obj.toString()\r\n\tif(obj && isObject(obj)) {\r\n\t\tconst props = Object.keys(obj),\r\n\t\t\t  indent = '\\t'.repeat(stack.length)\r\n\t\treturn `{${props.map(\r\n\t\t\tkey => `\\n${indent+key}: ${toString(obj[key], stack)}`\r\n\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t}\r\n\treturn String(obj)\r\n}","import {is, isPlainObject, isFunction, toString} from \"./helpers\"\r\nimport {Model} from \"./model\"\r\n\r\nexport function parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!is(Array, def)) return [def]\r\n\t\tif(def.length === 1) return [...def, undefined, null]\r\n\t} else {\r\n\t\tfor(let key of Object.keys(def))\r\n\t\t\tdef[key] = parseDefinition(def[key])\r\n\t}\r\n\treturn def\r\n}\r\n\r\n\r\nexport function checkDefinition(obj, def, path, errors, stack, shouldCast=false){\r\n\tconst indexFound = stack.indexOf(def)\r\n\tif(indexFound !== -1 && stack.indexOf(def, indexFound+1) !== -1)\r\n\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\tif(shouldCast)\r\n\t\tobj = cast(obj, def)\r\n\r\n\r\n\tif(is(Model, def)){\r\n\t\tdef._validate(obj, path, errors, stack.concat(def))\r\n\t}\r\n\telse if(isPlainObject(def)){\r\n\t\tObject.keys(def).forEach(key => {\r\n\t\t\tconst val = obj != null ? obj[key] : undefined\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, errors, stack)\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tconst pdef = parseDefinition(def)\r\n\t\tif(pdef.some(part => checkDefinitionPart(obj, part, path, stack)))\r\n\t\t\treturn obj\r\n\r\n\t\terrors.push({\r\n\t\t\texpected: def,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t})\r\n\t}\r\n\r\n\treturn obj\r\n}\r\n\r\nexport function checkDefinitionPart(obj, def, path, stack){\r\n\tif(obj == null) return obj === def\r\n\tif(isPlainObject(def) || is(Model, def)){ // object or model as part of union type\r\n\t\tconst errors = []\r\n\t\tcheckDefinition(obj, def, path, errors, stack)\r\n\t\treturn !errors.length\r\n\t}\r\n\tif(is(RegExp, def)) return def.test(obj)\r\n\tif(def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj.constructor === def\r\n}\r\n\r\n\r\nexport function checkAssertions(obj, model, path, errors = model.errors){\r\n\tfor(let assertion of model.assertions){\r\n\t\tlet result\r\n\t\ttry {\r\n\t\t\tresult = assertion.call(model, obj)\r\n\t\t} catch(err){\r\n\t\t\tresult = err\r\n\t\t}\r\n\t\tif(result !== true){\r\n\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t`assertion \"${assertion.description}\" returned ${toString(assertionResult)} for value ${toString(value)}`\r\n\t\t\terrors.push({\r\n\t\t\t\tmessage: onFail.call(model, result, obj),\r\n\t\t\t\texpected: assertion,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function cast(obj, defNode=[]) {\r\n\tif(!obj || isPlainObject(defNode) || is(Model, obj.constructor))\r\n\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\tconst def = parseDefinition(defNode),\r\n\t      suitableModels = []\r\n\r\n\tfor (let part of def) {\r\n\t\tif(is(Model, part) && part.test(obj))\r\n\t\t\tsuitableModels.push(part)\r\n\t}\r\n\r\n\tif (suitableModels.length === 1) {\r\n\t\t// automatically cast to suitable model when explicit\r\n\t\tconst model = suitableModels[0];\r\n\t\treturn is(Model, model) ? model(obj) : new model(obj) // basic models should not be called with new\r\n\t}\r\n\r\n\tif (suitableModels.length > 1)\r\n\t\tconsole.warn(`Ambiguous model for value ${toString(obj)}, could be ${suitableModels.join(\" or \")}`)\r\n\r\n\treturn obj\r\n}","import { extend, setConstructor } from \"./helpers\"\r\nimport { Model } from \"./model\"\r\n\r\nexport default function BasicModel(def){\r\n\tconst model = function(val = model.default) {\r\n\t\tmodel.validate(val)\r\n\t\treturn val\r\n\t}\r\n\r\n\tsetConstructor(model, BasicModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(BasicModel, Model)","import { Model } from \"./model\"\r\nimport { cast, checkDefinition, checkAssertions } from \"./definition\"\r\nimport { extend, is, isString, isFunction, isObject, isPlainObject, merge, setConstructor, toString } from \"./helpers\"\r\n\r\n\r\nexport default function ObjectModel(def){\r\n\tconst model = function(obj = model.default) {\r\n\t\tif(!is(model, this)) return new model(obj)\r\n\t\tif(is(model, obj)) return obj\r\n\t\tmerge(this, obj, true)\r\n\t\tif(model.hasOwnProperty(\"constructor\")){\r\n\t\t\tmodel.constructor.call(this, obj)\r\n\t\t}\r\n\t\tmodel.validate(this)\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t}\r\n\r\n\textend(model, Object)\r\n\tsetConstructor(model, ObjectModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(ObjectModel, Model, {\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p)\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn toString(this.definition, stack)\r\n\t},\r\n\r\n\textend(){\r\n\t\tconst def = {}\r\n\t\tconst proto = {}\r\n\t\tconst args = [...arguments]\r\n\r\n\t\tObject.assign(def, this.definition)\r\n\t\tmerge(proto, this.prototype, false, true)\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(Model, arg)) merge(def, arg.definition, true)\r\n\t\t\tif(isFunction(arg)) merge(proto, arg.prototype, true, true)\r\n\t\t\tif(isObject(arg)) merge(def, arg, true, true)\r\n\t\t})\r\n\t\tdelete proto.constructor;\r\n\r\n\t\tlet assertions = [...this.assertions]\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(Model, arg)) assertions = assertions.concat(arg.assertions)\r\n\t\t})\r\n\r\n\t\tconst submodel = new this.constructor(def)\r\n\t\textend(submodel, this, proto)\r\n\t\tsubmodel.assertions = assertions\r\n\t\tsubmodel.errorCollector = this.errorCollector\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t_validate(obj, path, errors, stack){\r\n\t\tif(!isObject(obj)){\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\t}\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t}\r\n})\r\n\r\nfunction getProxy(model, obj, def, path) {\r\n\tif(!isPlainObject(def)) {\r\n\t\treturn cast(obj, def)\r\n\t}\r\n\r\n\treturn new Proxy(obj || {}, {\r\n\t\tgetPrototypeOf(){\r\n\t\t\treturn path ? Object.prototype : model.prototype\r\n\t\t},\r\n\r\n\t\tget(o, key) {\r\n\t\t\tif(!isString(key)) return Reflect.get(o, key)\r\n\r\n\t\t\tconst newPath = (path ? path + '.' + key : key),\r\n\t\t\t      defPart = def[key];\r\n\r\n\t\t\tif(key in def && model.conventionForPrivate(key)){\r\n\t\t\t\tmodel.errors.push({\r\n\t\t\t\t\tmessage: `cannot access to private property ${newPath}`\r\n\t\t\t\t})\r\n\t\t\t\tmodel.unstackErrors()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif(o[key] && o.hasOwnProperty(key) && !isPlainObject(defPart) && !is(Model, o[key].constructor)){\r\n\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\r\n\t\t\t}\r\n\r\n\t\t\tif (isFunction(o[key]) && o[key].bind) {\r\n\t\t\t\treturn o[key].bind(o); // auto-bind methods to original object, so they can access private props\r\n\t\t\t}\r\n\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, (newPath) => {\r\n\t\t\t\tReflect.set(o, key, getProxy(model, val, def[key], newPath))\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(){\r\n\t\t\treturn Reflect.ownKeys(def).filter(key => !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetOwnPropertyDescriptor(o, key){\r\n\t\t\tlet descriptor;\r\n\t\t\tif(!model.conventionForPrivate(key)){\r\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tif(descriptor !== undefined) descriptor.value = o[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction controlMutation(model, def, path, o, key, applyMutation){\r\n\tconst newPath = (path ? path + '.' + key : key),\r\n\t      isPrivate = model.conventionForPrivate(key),\r\n\t      isConstant = model.conventionForConstant(key),\r\n\t      isOwnProperty = o.hasOwnProperty(key),\r\n\t      initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\r\n\r\n\tif(key in def && (isPrivate || (isConstant && o[key] !== undefined))){\r\n\t\tmodel.errors.push({\r\n\t\t\tmessage: `cannot modify ${isPrivate ? \"private\" : \"constant\"} ${key}`\r\n\t\t})\r\n\t}\r\n\r\n\tif(def.hasOwnProperty(key)){\r\n\t\tapplyMutation(newPath)\r\n\t\tcheckDefinition(o[key], def[key], newPath, model.errors, [])\r\n\t\tcheckAssertions(o, model, newPath)\r\n\t} else {\r\n\t\tmodel.errors.push({\r\n\t\t\tmessage: `cannot find property ${newPath} in the model definition`\r\n\t\t})\r\n\t}\r\n\r\n\tif(model.errors.length){\r\n\t\tif(isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\r\n\t\telse delete o[key] // back to the initial property defined in prototype chain\r\n\r\n\t\tmodel.unstackErrors()\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}","import {bettertypeof, define, extend, is, isPlainObject, toString} from \"./helpers\"\r\nimport {checkAssertions, checkDefinition, parseDefinition} from \"./definition\"\r\nimport BasicModel from \"./basic-model\"\r\nimport ObjectModel from \"./object-model\"\r\n\r\n\r\nexport function Model(def){\r\n\treturn isPlainObject(def) ? new ObjectModel(def) : new BasicModel(def)\r\n}\r\n\r\nObject.assign(Model.prototype, {\r\n\tname: \"Model\",\r\n\tassertions: [],\r\n\r\n\tconventionForConstant: key => key.toUpperCase() === key,\r\n\tconventionForPrivate: key => key[0] === \"_\",\r\n\r\n\ttoString(stack){\r\n\t\treturn parseDefinition(this.definition).map(d => toString(d, stack)).join(\" or \")\r\n\t},\r\n\r\n\tas(name){\r\n\t\tdefine(this, \"name\", name);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val\r\n\t\treturn this\r\n\t},\r\n\r\n\t_init(args){\r\n\t\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\t\tthis.definition = args[0]\r\n\t\tthis.assertions = this.assertions.slice()\r\n\t\tdefine(this, \"errors\", [])\r\n\t\tdelete this.name;\r\n\t},\r\n\r\n\t_validate(obj, path, errors, stack){\r\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\r\n\t\tcheckAssertions(obj, this, path, errors)\r\n\t},\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis._validate(obj, null, this.errors, [])\r\n\t\tthis.unstackErrors(errorCollector)\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector\r\n\t\tthis.errorCollector = () => { failed = true }\r\n\t\tnew this(obj)\r\n\t\tthis.errorCollector = initialErrorCollector\r\n\t\treturn !failed\r\n\t},\r\n\r\n\t// throw all errors collected\r\n\tunstackErrors(errorCollector){\r\n\t\tif (!this.errors.length) return\r\n\t\tif (!errorCollector) errorCollector = this.errorCollector\r\n\t\tconst errors = this.errors.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tconst def = is(Array, err.expected) ? err.expected : [err.expected]\r\n\t\t\t\terr.message = (\"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => toString(d)).join(\" or \")\r\n\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + toString(err.received))\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t})\r\n\t\tthis.errors = []\r\n\t\terrorCollector.call(this, errors)\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\textend(...newParts){\r\n\t\tlet def = this.definition;\r\n\t\tif(newParts.length > 0){\r\n\t\t\tdef = newParts\r\n\t\t\t\t.reduce((def, ext) => def.concat(ext), Array.isArray(def) ? def.slice() : [def]) // clone to lose ref\r\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\r\n\t\t}\r\n\r\n\t\tlet assertions = [...this.assertions]\r\n\t\tnewParts.forEach(part => {\r\n\t\t\tif(is(BasicModel, part)) assertions = assertions.concat(part.assertions)\r\n\t\t})\r\n\r\n\t\tconst submodel = new this.constructor(def)\r\n\t\textend(submodel, this)\r\n\t\tsubmodel.assertions = assertions\r\n\t\tsubmodel.errorCollector = this.errorCollector\r\n\t\treturn submodel\r\n\t},\r\n\r\n\tassert(assertion, description = toString(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion)\r\n\t\treturn this\r\n\t}\r\n})\r\n\r\nexport default Model;","import { Model } from \"./model\"\r\nimport { checkDefinition, checkAssertions, cast } from \"./definition\"\r\nimport { extend, is, setConstructor, toString } from \"./helpers\"\r\n\r\nconst MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"]\r\n\r\nfunction ArrayModel(def){\r\n\r\n\tconst model = function(array = model.default) {\r\n\t\tif(!is(model, this)) return new model(array)\r\n\t\tmodel.validate(array)\r\n\t\treturn new Proxy(array, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (MUTATOR_METHODS.includes(key)) return proxifyMethod(arr, key, model)\r\n\t\t\t\treturn arr[key]\r\n\t\t\t},\r\n\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\treturn setArrayKey(arr, key, val, model)\r\n\t\t\t},\r\n\r\n\t\t\tdeleteProperty(arr, key){\r\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\textend(model, Array)\r\n\tsetConstructor(model, ArrayModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(ArrayModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(arr, path, errors, stack){\r\n\t\tif(is(Array, arr))\r\n\t\t\tarr.forEach((a,i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack, true)\r\n\t\t\t})\r\n\t\telse errors.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: arr,\r\n\t\t\tpath\r\n\t\t})\r\n\r\n\t\tcheckAssertions(arr, this, path, errors)\r\n\t}\r\n})\r\n\r\nfunction proxifyMethod(array, method, model){\r\n\treturn function() {\r\n\t\tconst testArray = array.slice();\r\n\t\t[][method].apply(testArray, arguments)\r\n\t\tmodel.validate(testArray)\r\n\t\tconst returnValue = [][method].apply(array, arguments)\r\n\t\tarray.forEach((a,i)=> array[i] = cast(a, model.definition))\r\n\t\treturn returnValue\r\n\t}\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tlet path = `Array[${key}]`;\r\n\tif(parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [], true)\r\n\r\n\tconst testArray = array.slice()\r\n\ttestArray[key] = value\r\n\tcheckAssertions(testArray, model, path)\r\n\tconst isSuccess = !model.unstackErrors()\r\n\tif(isSuccess){\r\n\t\tarray[key] = value\r\n\t}\r\n\treturn isSuccess\r\n}\r\n\r\nexport default ArrayModel","import { Model } from \"./model\"\r\nimport { checkDefinition, checkAssertions } from \"./definition\"\r\nimport { extend, isFunction, setConstructor, toString } from \"./helpers\"\r\n\r\n\r\nfunction FunctionModel() {\r\n\r\n\tconst model = function(fn = model.default) {\r\n\t\treturn new Proxy(fn, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tconst def = model.definition\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\r\n\r\n\t\t\t\tlet result\r\n\t\t\t\tif(!model.errors.length){\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\r\n\t\t\t\t}\r\n\t\t\t\tmodel.unstackErrors()\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\textend(model, Function)\r\n\tsetConstructor(model, FunctionModel)\r\n\tmodel._init([ { arguments: [...arguments] } ])\r\n\r\n\treturn model\r\n}\r\n\r\nextend(FunctionModel, Model, {\r\n\ttoString(stack){\r\n\t\tlet out = 'Function(' + this.definition.arguments.map(argDef => toString(argDef, stack)).join(\",\") +')'\r\n\t\tif(\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + toString(this.definition.return)\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def\r\n\t\treturn this\r\n\t},\r\n\r\n\t_validate(f, path, errors){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: \"Function\",\r\n\t\t\t\treceived: f,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n})\r\n\r\nFunctionModel.prototype.assert(function(args){\r\n\tif (args.length > this.definition.arguments.length) return args\r\n\treturn true\r\n}, function(args){\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${toString(this)}, got ${args.length}`\r\n})\r\n\r\nexport default FunctionModel","import { Model } from \"./model\"\r\nimport { checkDefinition, checkAssertions } from \"./definition\"\r\nimport { extend, setConstructor, toString } from \"./helpers\"\r\n\r\nconst MAP_MUTATOR_METHODS = [\"set\", \"delete\", \"clear\"]\r\n\r\nfunction MapModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst map = new Map(iterable)\r\n\t\tmodel.validate(map)\r\n\r\n\t\tfor(let method of MAP_MUTATOR_METHODS){\r\n\t\t\tmap[method] = function() {\r\n\t\t\t\tconst testMap = new Map(map)\r\n\t\t\t\tMap.prototype[method].apply(testMap, arguments)\r\n\t\t\t\tmodel.validate(testMap)\r\n\t\t\t\treturn Map.prototype[method].apply(map, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetConstructor(map, model)\r\n\t\treturn map\r\n\t}\r\n\r\n\textend(model, Map)\r\n\tsetConstructor(model, MapModel)\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(MapModel, Model, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Map of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(map, path, errors, stack){\r\n\t\tif(map instanceof Map){\r\n\t\t\tfor(let [key,val] of map){\r\n\t\t\t\tcheckDefinition(val, this.definition, `${path || \"Map\"}[${key}]`, errors, stack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: map,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t\tcheckAssertions(map, this, errors)\r\n\t}\r\n})\r\n\r\nexport default MapModel","import { Model } from \"./model\"\r\nimport { checkDefinition, checkAssertions } from \"./definition\"\r\nimport { extend, setConstructor, toString } from \"./helpers\"\r\n\r\nconst SET_MUTATOR_METHODS = [\"add\", \"delete\", \"clear\"]\r\n\r\nfunction SetModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst _set = new Set(iterable)\r\n\t\tmodel.validate(_set)\r\n\r\n\t\tfor(let method of SET_MUTATOR_METHODS){\r\n\t\t\t_set[method] = function() {\r\n\t\t\t\tconst testSet = new Set(_set)\r\n\t\t\t\tSet.prototype[method].apply(testSet, arguments)\r\n\t\t\t\tmodel.validate(testSet)\r\n\t\t\t\treturn Set.prototype[method].apply(_set, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetConstructor(_set, model)\r\n\t\treturn _set\r\n\t}\r\n\r\n\textend(model, Set)\r\n\tsetConstructor(model, SetModel);\r\n\tmodel._init(arguments)\r\n\treturn model\r\n}\r\n\r\nextend(SetModel, Model, {\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(_set, path, errors, stack){\r\n\t\tif(_set instanceof Set){\r\n\t\t\tfor(let item of _set.values()){\r\n\t\t\t\tcheckDefinition(item, this.definition, (path || \"Set\"), errors, stack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrors.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: _set,\r\n\t\t\t\tpath\r\n\t\t\t})\r\n\t\t}\r\n\t\tcheckAssertions(_set, this, errors)\r\n\t}\r\n})\r\n\r\nexport default SetModel"],"names":["is","Constructor","obj","isString","o","isFunction","isObject","isPlainObject","Object","getPrototypeOf","prototype","bettertypeof","x","toString","call","match","merge","target","src","deep","includingProto","key","hasOwnProperty","define","value","enumerable","defineProperty","writable","configurable","setConstructor","model","constructor","setPrototypeOf","extend","child","parent","props","assign","create","stack","length","includes","undefined","String","Model","concat","name","Array","map","item","join","keys","indent","repeat","slice","parseDefinition","def","checkDefinition","path","errors","shouldCast","indexFound","indexOf","cast","_validate","forEach","val","pdef","some","part","checkDefinitionPart","push","expected","received","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","assertions","result","err","onFail","description","assertionResult","message","defNode","suitableModels","console","warn","BasicModel","default","validate","_init","arguments","ObjectModel","this","getProxy","definition","Proxy","[object Object]","Reflect","get","newPath","defPart","conventionForPrivate","unstackErrors","bind","controlMutation","set","deleteProperty","args","has","ownKeys","filter","descriptor","getOwnPropertyDescriptor","applyMutation","isPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","ArrayModel","array","arr","MUTATOR_METHODS","proxifyMethod","setArrayKey","method","testArray","apply","returnValue","a","i","parseInt","isSuccess","FunctionModel","fn","ctx","argDef","return","Function","MapModel","iterable","Map","MAP_MUTATOR_METHODS","testMap","SetModel","_set","Set","SET_MUTATOR_METHODS","testSet","p","proto","arg","submodel","errorCollector","toUpperCase","d","Error","failed","initialErrorCollector","e","TypeError","replace","newParts","reduce","ext","isArray","index","self","out","f","assert","values"],"mappings":"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"}