{"version":3,"sources":["object-model.js"],"names":[],"mappings":"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","file":"object-model.min.js","sourcesContent":["/*!\n * Objectmodel v3.0.0\n * http://objectmodel.js.org\n *\n * Copyright (c) 2017 Sylvain Pollet-Villard\n * Licensed under the MIT license\n */\n\n(function (exports) {\n'use strict';\n\nconst defineProperty = Object.defineProperty;\r\n\r\nfunction is(Constructor, obj){\r\n\treturn obj instanceof Constructor\r\n}\r\n\r\nfunction isFunction(o){\r\n\treturn typeof o === \"function\"\r\n}\r\n\r\nfunction isObject(o){\r\n    return typeof o === \"object\"\r\n}\r\n\r\nfunction isPlainObject(o){\r\n\treturn o && isObject(o) && Object.getPrototypeOf(o) === Object.prototype\r\n}\r\n\r\nfunction bettertypeof(obj){\r\n\treturn ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1]\r\n}\r\n\r\nfunction merge(target, src={}, deep, includingProto) {\r\n\tfor(let key in src){\r\n\t\tif(includingProto || src.hasOwnProperty(key)){\r\n\t\t\tif(deep && isPlainObject(src[key])){\r\n\t\t\t\tconst o = {};\r\n\t\t\t\tmerge(o, target[key], deep);\r\n\t\t\t\tmerge(o, src[key], deep);\r\n\t\t\t\ttarget[key] = o;\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = src[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction define(obj, key, value, enumerable=false) {\r\n\tdefineProperty(obj, key, { value, enumerable, writable: true, configurable: true });\r\n}\r\n\r\nfunction setConstructor(model, constructor){\r\n\tObject.setPrototypeOf(model, constructor.prototype);\r\n\tdefine(model, \"constructor\", constructor);\r\n}\r\n\r\nfunction setConstructorProto(constructor, proto){\r\n\tconstructor.prototype = Object.create(proto);\r\n\tconstructor.prototype.constructor = constructor;\r\n}\r\n\r\nfunction toString(obj, stack = []){\r\n\tif(stack.length > 15 || stack.includes(obj)) return '...'\r\n\tif(obj === null || obj === undefined) return String(obj)\r\n\tif(typeof obj === \"string\") return `\"${obj}\"`\r\n\tif(is(BasicModel, obj)) return obj.toString(stack)\r\n\tstack = [obj].concat(stack);\r\n\tif(isFunction(obj)) return obj.name || obj.toString(stack)\r\n\tif(is(Array, obj)) return `[${obj.map(item => toString(item, stack)).join(', ')}]`\r\n\tif(obj.toString !== Object.prototype.toString) return obj.toString()\r\n\tif(obj && isObject(obj)) {\r\n\t\tconst props = Object.keys(obj),\r\n\t\t\t  indent = '\\t'.repeat(stack.length);\r\n\t\treturn `{${props.map(\r\n\t\t\tkey => `\\n${indent+key}: ${toString(obj[key], stack)}`\r\n\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\r\n\t}\r\n\treturn String(obj)\r\n}\n\nfunction checkDefinition(obj, def, path, errorStack, callStack, shouldCast=false){\r\n\tconst indexFound = callStack.indexOf(def);\r\n\tif(indexFound !== -1 && callStack.indexOf(def, indexFound+1) !== -1)\r\n\t\treturn obj //if found twice in call stack, cycle detected, skip validation\r\n\r\n\tif(shouldCast)\r\n\t\tobj = cast(obj, def);\r\n\r\n\r\n\tif(is(BasicModel, def)){\r\n\t\tdef._validate(obj, path, errorStack, callStack.concat(def));\r\n\t}\r\n\telse if(isPlainObject(def)){\r\n\t\tObject.keys(def).forEach(key => {\r\n\t\t\tconst val = obj != null ? obj[key] : undefined;\r\n\t\t\tcheckDefinition(val, def[key], path ? path + '.' + key : key, errorStack, callStack);\r\n\t\t});\r\n\t}\r\n\telse {\r\n\t\tconst pdef = parseDefinition(def);\r\n\t\tif(pdef.some(part => checkDefinitionPart(obj, part, path, callStack)))\r\n\t\t\treturn obj\r\n\r\n\t\terrorStack.push({\r\n\t\t\texpected: def,\r\n\t\t\treceived: obj,\r\n\t\t\tpath\r\n\t\t});\r\n\t}\r\n\r\n\treturn obj\r\n}\r\n\r\nfunction checkDefinitionPart(obj, def, path, callStack){\r\n\tif(obj == null) return obj === def\r\n\tif(isPlainObject(def) || is(BasicModel, def)){ // object or model as part of union type\r\n\t\tconst errorStack = [];\r\n\t\tcheckDefinition(obj, def, path, errorStack, callStack);\r\n\t\treturn !errorStack.length\r\n\t}\r\n\tif(is(RegExp, def)) return def.test(obj)\r\n\tif(def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\r\n\treturn obj === def\r\n\t\t|| (isFunction(def) && is(def, obj))\r\n\t\t|| obj.constructor === def\r\n}\r\n\r\n\r\nfunction checkAssertions(obj, model, path, errorStack = model.errorStack){\r\n\tfor(let assertion of model.assertions){\r\n\t\tlet result;\r\n\t\ttry {\r\n\t\t\tresult = assertion.call(model, obj);\r\n\t\t} catch(err){\r\n\t\t\tresult = err;\r\n\t\t}\r\n\t\tif(result !== true){\r\n\t\t\tconst onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\r\n\t\t\t\t`assertion \"${assertion.description}\" returned ${toString(assertionResult)} for value ${toString(value)}`;\r\n\t\t\terrorStack.push({\r\n\t\t\t\tmessage: onFail.call(model, result, obj),\r\n\t\t\t\texpected: assertion,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction cast(obj, defNode=[]) {\r\n\tif(!obj || isPlainObject(defNode) || is(BasicModel, obj.constructor))\r\n\t\treturn obj // no value or not leaf or already a model instance\r\n\r\n\tconst def = parseDefinition(defNode),\r\n\t      suitableModels = [];\r\n\r\n\tfor (let part of def) {\r\n\t\tif(is(BasicModel, part) && part.test(obj))\r\n\t\t\tsuitableModels.push(part);\r\n\t}\r\n\r\n\tif (suitableModels.length === 1)\r\n\t\treturn suitableModels[0](obj) // automatically cast to suitable model when explicit\r\n\r\n\tif (suitableModels.length > 1)\r\n\t\tconsole.warn(`Ambiguous model for value ${toString(obj)}, could be ${suitableModels.join(\" or \")}`);\r\n\r\n\treturn obj\r\n}\n\nfunction BasicModel(def){\r\n\tconst model = function(val = model.default) {\r\n\t\tmodel.validate(val);\r\n\t\treturn val\r\n\t};\r\n\r\n\tinitModel(model, arguments, BasicModel);\r\n\treturn model\r\n}\r\n\r\nObject.assign(BasicModel.prototype, {\r\n\ttoString(stack){\r\n\t\treturn parseDefinition(this.definition).map(d => toString(d, stack)).join(\" or \")\r\n\t},\r\n\r\n\tassertions: [],\r\n\r\n\tvalidate(obj, errorCollector){\r\n\t\tthis._validate(obj, null, this.errorStack, []);\r\n\t\tthis.unstackErrors(errorCollector);\r\n\t},\r\n\r\n\ttest(obj){\r\n\t\tlet failed,\r\n\t\t    initialErrorCollector = this.errorCollector;\r\n\t\tthis.errorCollector = () => { failed = true; };\r\n\t\tthis(obj);\r\n\t\tthis.errorCollector = initialErrorCollector;\r\n\t\treturn !failed\r\n\t},\r\n\r\n\textend(){\r\n\t\tconst args = [...arguments];\r\n\t\tconst def = args\r\n\t\t\t.reduce((def, ext) => def.concat(parseDefinition(ext)), parseDefinition(this.definition))\r\n\t\t\t.filter((value, index, self) => self.indexOf(value) === index); // remove duplicates\r\n\r\n\t\tlet assertions = [...this.assertions];\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(BasicModel, arg)) assertions = assertions.concat(arg.assertions);\r\n\t\t});\r\n\r\n\t\tconst submodel = new this.constructor(def);\r\n\t\tsetConstructorProto(submodel, this.prototype);\r\n\t\tsubmodel.assertions = assertions;\r\n\t\tsubmodel.errorCollector = this.errorCollector;\r\n\t\treturn submodel\r\n\t},\r\n\r\n\tassert(assertion, description = toString(assertion)){\r\n\t\tdefine(assertion, \"description\", description);\r\n\t\tthis.assertions = this.assertions.concat(assertion);\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaultTo(val){\r\n\t\tthis.default = val;\r\n\t\treturn this\r\n\t},\r\n\r\n\terrorCollector(errors){\r\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'));\r\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\"); // blackbox objectmodel in stacktrace\r\n\t\tthrow e\r\n\t},\r\n\r\n\t_validate(obj, path, errorStack, callStack){\r\n\t\tcheckDefinition(obj, this.definition, path, errorStack, callStack);\r\n\t\tcheckAssertions(obj, this, path, errorStack);\r\n\t},\r\n\r\n\t// throw all errors collected\r\n\tunstackErrors(errorCollector){\r\n\t\tif (!this.errorStack.length) return\r\n\t\tif (!errorCollector) errorCollector = this.errorCollector;\r\n\t\tconst errors = this.errorStack.map(err => {\r\n\t\t\tif (!err.message) {\r\n\t\t\t\tconst def = is(Array, err.expected) ? err.expected : [err.expected];\r\n\t\t\t\terr.message = (\"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => toString(d)).join(\" or \")\r\n\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + toString(err.received));\r\n\t\t\t}\r\n\t\t\treturn err\r\n\t\t});\r\n\t\tthis.errorStack = [];\r\n\t\terrorCollector.call(this, errors);\r\n\t}\r\n\r\n});\r\n\r\nBasicModel.prototype.conventionForConstant = key => key.toUpperCase() === key;\r\nBasicModel.prototype.conventionForPrivate = key => key[0] === \"_\";\r\n\r\nfunction initModel(model, args, constructor){\r\n\tif(args.length === 0) throw new Error(\"Model definition is required\");\r\n\tsetConstructor(model, constructor);\r\n\tmodel.definition = args[0];\r\n\tmodel.assertions = model.assertions.slice();\r\n\tdefine(model, \"errorStack\", []);\r\n}\r\n\r\nfunction parseDefinition(def){\r\n\tif(!isPlainObject(def)){\r\n\t\tif(!is(Array, def)) return [def]\r\n\t\tif(def.length === 1) return [...def, undefined, null]\r\n\t} else {\r\n\t\tfor(let key of Object.keys(def))\r\n\t\t\tdef[key] = parseDefinition(def[key]);\r\n\t}\r\n\treturn def\r\n}\n\nfunction ObjectModel(def){\r\n\tconst model = function(obj = model.default) {\r\n\t\tif(!is(model, this)) return new model(obj)\r\n\t\tif(is(model, obj)) return obj\r\n\t\tmerge(this, obj, true);\r\n\t\tmodel.validate(this);\r\n\t\treturn getProxy(model, this, model.definition)\r\n\t};\r\n\r\n\tsetConstructorProto(model, Object.prototype);\r\n\tinitModel(model, arguments, ObjectModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(ObjectModel, BasicModel.prototype);\r\n\r\nObject.assign(ObjectModel.prototype, {\r\n\r\n\tdefaults(p){\r\n\t\tObject.assign(this.prototype, p);\r\n\t\treturn this\r\n\t},\r\n\r\n\ttoString(stack){\r\n\t\treturn toString(this.definition, stack)\r\n\t},\r\n\r\n\textend(){\r\n\t\tconst def = {};\r\n\t\tconst proto = {};\r\n\t\tconst args = [...arguments];\r\n\r\n\t\tObject.assign(def, this.definition);\r\n\t\tmerge(proto, this.prototype, false, true);\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(BasicModel, arg)) merge(def, arg.definition, true);\r\n\t\t\tif(isFunction(arg)) merge(proto, arg.prototype, true, true);\r\n\t\t\tif(isObject(arg)) merge(def, arg, true, true);\r\n\t\t});\r\n\t\tdelete proto.constructor;\r\n\r\n\t\tlet assertions = [...this.assertions];\r\n\t\targs.forEach(arg => {\r\n\t\t\tif(is(BasicModel, arg)) assertions = assertions.concat(arg.assertions);\r\n\t\t});\r\n\r\n\t\tconst submodel = new this.constructor(def);\r\n\t\tsetConstructorProto(submodel, this.prototype);\r\n\t\tObject.assign(submodel.prototype, proto);\r\n\t\tsubmodel.assertions = assertions;\r\n\t\tsubmodel.errorCollector = this.errorCollector;\r\n\t\treturn submodel\r\n\t},\r\n\r\n\t_validate(obj, path, errorStack, callStack){\r\n\t\tif(!isObject(obj)){\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: obj,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcheckDefinition(obj, this.definition, path, errorStack, callStack);\r\n\t\t}\r\n\t\tcheckAssertions(obj, this, path, errorStack);\r\n\t}\r\n});\r\n\r\nfunction getProxy(model, obj, def, path) {\r\n\tif(!isPlainObject(def)) {\r\n\t\treturn cast(obj, def)\r\n\t}\r\n\r\n\treturn new Proxy(obj || {}, {\r\n\t\tget(o, key) {\r\n\t\t\tconst newPath = (path ? path + '.' + key : key),\r\n\t\t\t      defPart = def[key];\r\n\t\t\tif(key in def && model.conventionForPrivate(key)){\r\n\t\t\t\tmodel.errorStack.push({\r\n\t\t\t\t\tmessage: `cannot access to private property ${newPath} in the model definition`\r\n\t\t\t\t});\r\n\t\t\t\tmodel.unstackErrors();\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t\tif(o[key] && o.hasOwnProperty(key) && !isPlainObject(defPart) && !is(BasicModel, o[key].constructor)){\r\n\t\t\t\to[key] = cast(o[key], defPart); // cast nested models\r\n\t\t\t}\r\n\t\t\treturn getProxy(model, o[key], defPart, newPath)\r\n\t\t},\r\n\r\n\t\tset(o, key, val) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, (newPath) => {\r\n\t\t\t\tReflect.set(o, key, getProxy(model, val, def[key], newPath));\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tdeleteProperty(o, key) {\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.deleteProperty(o, key))\r\n\t\t},\r\n\r\n\t\tdefineProperty(o, key, args){\r\n\t\t\treturn controlMutation(model, def, path, o, key, () => Reflect.defineProperty(o, key, args))\r\n\t\t},\r\n\r\n\t\thas(o, key){\r\n\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\r\n\t\t},\r\n\r\n\t\townKeys(o){\r\n\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\r\n\t\t},\r\n\r\n\t\tgetPrototypeOf(){\r\n\t\t\treturn model.prototype\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction controlMutation(model, def, path, o, key, applyMutation){\r\n\tconst newPath = (path ? path + '.' + key : key),\r\n\t      isPrivate = model.conventionForPrivate(key),\r\n\t      isConstant = model.conventionForConstant(key),\r\n\t      isOwnProperty = o.hasOwnProperty(key),\r\n\t      initialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key);\r\n\r\n\tif(key in def && (isPrivate || (isConstant && o[key] !== undefined))){\r\n\t\tmodel.errorStack.push({\r\n\t\t\tmessage: `cannot modify ${isPrivate ? \"private\" : \"constant\"} ${key}`\r\n\t\t});\r\n\t}\r\n\r\n\tif(def.hasOwnProperty(key)){\r\n\t\tapplyMutation(newPath);\r\n\t\tcheckDefinition(o[key], def[key], newPath, model.errorStack, []);\r\n\t\tcheckAssertions(o, model, newPath);\r\n\t} else {\r\n\t\tmodel.errorStack.push({\r\n\t\t\tmessage: `cannot find property ${newPath} in the model definition`\r\n\t\t});\r\n\t}\r\n\r\n\tif(model.errorStack.length){\r\n\t\tif(isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor);\r\n\t\telse delete o[key]; // back to the initial property defined in prototype chain\r\n\r\n\t\tmodel.unstackErrors();\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}\n\nconst MUTATOR_METHODS = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"];\r\n\r\nfunction ArrayModel(def){\r\n\r\n\tconst model = function(array = model.default) {\r\n\t\tif(!is(model, this)) return new model(array)\r\n\t\tmodel.validate(array);\r\n\t\treturn new Proxy(array, {\r\n\t\t\tget(arr, key) {\r\n\t\t\t\tif (MUTATOR_METHODS.includes(key)) return proxifyMethod(arr, key, model)\r\n\t\t\t\treturn arr[key]\r\n\t\t\t},\r\n\t\t\tset(arr, key, val) {\r\n\t\t\t\tsetArrayKey(arr, key, val, model);\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tgetPrototypeOf(){\r\n\t\t\t\treturn model.prototype\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n\r\n\tsetConstructorProto(model, Array.prototype);\r\n\tinitModel(model, arguments, ArrayModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(ArrayModel, BasicModel.prototype);\r\nObject.assign(ArrayModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn 'Array of ' + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(arr, path, errorStack, callStack){\r\n\t\tif(is(Array, arr))\r\n\t\t\tarr.forEach((a,i) => {\r\n\t\t\t\tarr[i] = checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errorStack, callStack, true);\r\n\t\t\t});\r\n\t\telse errorStack.push({\r\n\t\t\texpected: this,\r\n\t\t\treceived: arr,\r\n\t\t\tpath\r\n\t\t});\r\n\r\n\t\tcheckAssertions(arr, this, path, errorStack);\r\n\t}\r\n});\r\n\r\nfunction proxifyMethod(array, method, model){\r\n\treturn function() {\r\n\t\tconst testArray = array.slice();\r\n\t\tArray.prototype[method].apply(testArray, arguments);\r\n\t\tmodel.validate(testArray);\r\n\t\tconst returnValue = Array.prototype[method].apply(array, arguments);\r\n\t\tarray.forEach((a,i)=> array[i] = cast(a, model.definition));\r\n\t\treturn returnValue\r\n\t}\r\n}\r\n\r\nfunction setArrayKey(array, key, value, model){\r\n\tlet path = `Array[${key}]`;\r\n\tif(parseInt(key) === +key && key >= 0)\r\n\t\tvalue = checkDefinition(value, model.definition, path, model.errorStack, [], true);\r\n\r\n\tconst testArray = array.slice();\r\n\ttestArray[key] = value;\r\n\tcheckAssertions(testArray, model, path);\r\n\tmodel.unstackErrors();\r\n\tarray[key] = value;\r\n}\n\nfunction FunctionModel(){\r\n\r\n\tconst model = function(fn = model.default) {\r\n\t\treturn new Proxy(fn, {\r\n\t\t\tgetPrototypeOf: () => model.prototype,\r\n\t\t\tapply (fn, ctx, args) {\r\n\t\t\t\tconst def = model.definition;\r\n\t\t\t\targs = Object.assign([], def.defaults, args);\r\n\r\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\r\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errorStack, [], true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckAssertions(args, model, \"arguments\");\r\n\r\n\t\t\t\tlet result;\r\n\t\t\t\tif(!model.errorStack.length){\r\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args);\r\n\t\t\t\t\tif (\"return\" in def)\r\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errorStack, [], true);\r\n\t\t\t\t}\r\n\t\t\t\tmodel.unstackErrors();\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tsetConstructorProto(model, Function.prototype);\r\n\r\n\tconst def = { arguments: [...arguments] };\r\n\tinitModel(model, [ def ], FunctionModel);\r\n\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(FunctionModel, BasicModel.prototype);\r\n\r\nObject.assign(FunctionModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\tlet out = 'Function(' + this.definition.arguments.map(argDef => toString(argDef, stack)).join(\",\") +')';\r\n\t\tif(\"return\" in this.definition) {\r\n\t\t\tout += \" => \" + toString(this.definition.return);\r\n\t\t}\r\n\t\treturn out\r\n\t},\r\n\r\n\treturn(def){\r\n\t\tthis.definition.return = def;\r\n\t\treturn this\r\n\t},\r\n\r\n\tdefaults(){\r\n\t\tthis.definition.defaults = [...arguments];\r\n\t\treturn this\r\n\t},\r\n\r\n\t_validate(f, path, errorStack){\r\n\t\tif (!isFunction(f)) {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: \"Function\",\r\n\t\t\t\treceived: f,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n\r\nFunctionModel.prototype.assert(function(args){\r\n\tif (args.length > this.definition.arguments.length) return args\r\n\treturn true\r\n}, function(args){\r\n\treturn `expecting ${this.definition.arguments.length} arguments for ${toString(this)}, got ${args.length}`\r\n});\n\nconst MAP_MUTATOR_METHODS = [\"set\", \"delete\", \"clear\"];\r\n\r\nfunction MapModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst map = new Map(iterable);\r\n\t\tmodel.validate(map);\r\n\r\n\t\tfor(let method of MAP_MUTATOR_METHODS){\r\n\t\t\tmap[method] = function() {\r\n\t\t\t\tconst testMap = new Map(map);\r\n\t\t\t\tMap.prototype[method].apply(testMap, arguments);\r\n\t\t\t\tmodel.validate(testMap);\r\n\t\t\t\treturn Map.prototype[method].apply(map, arguments)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetConstructor(map, model);\r\n\t\treturn map\r\n\t};\r\n\r\n\tsetConstructorProto(model, Map.prototype);\r\n\tinitModel(model, arguments, MapModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(MapModel, BasicModel.prototype);\r\nObject.assign(MapModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Map of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(map, path, errorStack, callStack){\r\n\t\tif(map instanceof Map){\r\n\t\t\tfor(let [key,val] of map){\r\n\t\t\t\tcheckDefinition(val, this.definition, `${path || \"Map\"}[${key}]`, errorStack, callStack);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: map,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t\tcheckAssertions(map, this, errorStack);\r\n\t}\r\n});\n\nconst SET_MUTATOR_METHODS = [\"add\", \"delete\", \"clear\"];\r\n\r\nfunction SetModel(def){\r\n\r\n\tconst model = function(iterable) {\r\n\t\tconst _set = new Set(iterable);\r\n\t\tmodel.validate(_set);\r\n\r\n\t\tfor(let method of SET_MUTATOR_METHODS){\r\n\t\t\t_set[method] = function() {\r\n\t\t\t\tconst testSet = new Set(_set);\r\n\t\t\t\tSet.prototype[method].apply(testSet, arguments);\r\n\t\t\t\tmodel.validate(testSet);\r\n\t\t\t\treturn Set.prototype[method].apply(_set, arguments)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetConstructor(_set, model);\r\n\t\treturn _set\r\n\t};\r\n\r\n\tsetConstructorProto(model, Set.prototype);\r\n\tinitModel(model, arguments, SetModel);\r\n\treturn model\r\n}\r\n\r\nsetConstructorProto(SetModel, BasicModel.prototype);\r\nObject.assign(SetModel.prototype, {\r\n\r\n\ttoString(stack){\r\n\t\treturn \"Set of \" + toString(this.definition, stack)\r\n\t},\r\n\r\n\t_validate(_set, path, errorStack, callStack){\r\n\t\tif(_set instanceof Set){\r\n\t\t\tfor(let item of _set.values()){\r\n\t\t\t\tcheckDefinition(item, this.definition, (path || \"Set\"), errorStack, callStack);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terrorStack.push({\r\n\t\t\t\texpected: this,\r\n\t\t\t\treceived: _set,\r\n\t\t\t\tpath\r\n\t\t\t});\r\n\t\t}\r\n\t\tcheckAssertions(_set, this, errorStack);\r\n\t}\r\n});\n\nexports.BasicModel = BasicModel;\nexports.ObjectModel = ObjectModel;\nexports.ArrayModel = ArrayModel;\nexports.FunctionModel = FunctionModel;\nexports.MapModel = MapModel;\nexports.SetModel = SetModel;\n\n}((this.ObjectModelBundle = this.ObjectModelBundle || {})));\n"]}